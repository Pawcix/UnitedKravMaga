@media (max-width:991px){#nav-list{display:flex;visibility:hidden;opacity:0;transition:opacity .5s,visibility .5s}}.navbar{position:fixed;width:100%;top:0;font-size:18px;background-color:rgba(2,2,2,.7960784314);transition:background-color .5s ease}.navbar__logo{width:400px;height:90px;background:url(../img/UnitedKravMagaLogo.png);background-position:50%;background-repeat:no-repeat;transform:scale(.75) translateX(-60px)}@media (max-width:991px){.navbar__logo{width:120px;height:90px;background:url(../img/UnitedKravMagaIcon.png);background-position:50%;background-repeat:no-repeat;transform:scale(.75) translateX(-20px);z-index:1}}.navbar__box{display:flex;justify-content:space-between;align-items:center}.navbar__list{display:flex;gap:20px}.navbar__list li a{position:relative;color:#fff;text-transform:uppercase;font-size:17px;letter-spacing:1px}.navbar__list li a:hover{color:#00aeef}.navbar__list li a:after{content:"";position:absolute;bottom:-5px;left:0;width:100%;height:3px;transform:scaleX(0);transform-origin:right;background-color:#00aeef;transition:transform .5s}.navbar__list li a:hover:after{transform:scaleX(1);transform-origin:left}@media (max-width:991px){.navbar__list li a{font-size:26px}}@media (max-width:991px){.navbar__list li{text-align:center;margin:0}}@media (max-width:991px){.navbar__list{position:absolute;display:none;justify-content:center;align-items:center;flex-direction:column;width:100%;height:100vh;top:0;right:0;bottom:0;left:0;background:rgba(2,2,2,.8509803922)}}.navbar__toggle{display:none;padding-right:10px}@media (max-width:991px){.navbar__toggle{display:block;z-index:1}}.navbar__icon{width:40px;height:35px;display:flex;justify-content:space-between;align-items:flex-end;flex-direction:column}.navbar__icon .bar{margin:4px 0;background-color:#fff;transition:transform .5s ease}.navbar__icon .bar:first-child{width:40px;height:3px}.navbar__icon .bar:nth-child(2){width:30px;height:3px;background-color:#00aeef;transition:opacity .3s}.navbar__icon .bar:nth-child(3){width:40px;height:3px}@media (max-width:991px){.navbar{font-size:26px;background-color:transparent;z-index:2;transition:background .5s ease!important}.navbar .active .bar{transition:transform .5s ease}.navbar .active .bar:first-child{transform:rotate(-45deg) translate(-6px,7px);background-color:#00aeef}.navbar .active .bar:nth-child(2){opacity:0;transition:opacity .3s}.navbar .active .bar:nth-child(3){transform:rotate(45deg) translate(-6px,-7px)}}.section-box{display:grid;gap:20px}.main__bgc{position:relative;height:100vh;background:url(/dist/img/328928760_564228779074771_9082883059883228319_n.jpg);background-position:50%;background-size:cover;z-index:0}.main__bgc--dark{position:absolute;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.75);z-index:-10}.main__bgc--heading{display:flex;justify-content:center;align-items:center;flex-direction:column;height:100%;color:#fff}.main__bgc--heading h2{font-size:50px;font-weight:600;color:#00aeef}@media (max-width:991px){.main__bgc--heading h2{font-size:40px}}@media (max-width:500px){.main__bgc--heading h2{font-size:30px}}.main__section-one{flex-direction:row}.main__section-one,.main__section-one--logo{display:flex;justify-content:center;align-items:center}.main__section-one--logo{margin:20px 0}@media (max-width:991px){.main__section-one--logo img{width:200px}}.main__section-one--content{display:flex;justify-content:center;align-items:flex-start;flex-direction:column;gap:20px;padding:20px}@media (max-width:991px){.main__section-one--content{display:flex;justify-content:center;align-items:center;flex-direction:column;padding:10px}}@media (max-width:991px){.main__section-one{flex-direction:column}}.main__section-two{display:flex;justify-content:center;align-items:center;flex-direction:row-reverse}.main__section-two--content{display:flex;justify-content:center;align-items:flex-start;flex-direction:column;gap:20px;padding:20px}@media (max-width:991px){.main__section-two--content{display:flex;justify-content:center;align-items:center;flex-direction:column;padding:10px}}.main__section-two--logo{display:flex;justify-content:center;align-items:center;margin:20px 0}.main__section-two--logo img{height:460px;border:10px double #00aeef;border-radius:10px;overflow:hidden}@media (max-width:992px){.main__section-two{flex-direction:column}}.footer a{color:#fff}.footer a:hover{color:#00aeef}.footer__info{padding:25px 0;background-color:#070707}.footer__box{display:flex;justify-content:space-between;align-items:center;flex-direction:row}@media (max-width:991px){.footer__box{flex-direction:column;gap:20px 0}}.footer__menu{display:flex;justify-content:flex-start;align-items:flex-start;flex-direction:column;gap:5px;font-size:18px}@media (max-width:991px){.footer__menu{justify-content:center;align-items:center}}.footer__logos{display:flex;justify-content:center;align-items:center;flex-direction:column}.footer__logos--google{transform:scale(.6)}.footer__logos--united{transform:scale(.75)}.footer__contact{display:flex;justify-content:flex-end;align-items:flex-end;flex-direction:column;text-align:end;gap:5px;transition:all .3s}.footer__contact--icons{font-size:36px}.footer__contact--icons:hover{color:#00aeef;transform:scale(1.2)}@media (max-width:991px){.footer__contact{justify-content:center;align-items:center}}.footer__author{padding:15px 0;text-align:center;color:#fff;background-color:#020202}.footer__author--author{display:flex;justify-content:center;align-items:center}.footer__author--author span{font-size:16px}@media (max-width:991px){.footer__author--author span{font-size:12px}}@media (max-width:450px){.footer__author--author span [data-author=author]{display:block}}.gallery__box .div1 img,.gallery__box .div2 img,.gallery__box .div3 img,.size-img{height:570px}.gallery__box{display:flex;justify-content:center;align-items:center}.gallery__box .parent{width:100%;display:grid;grid-template-columns:repeat(3,1fr);grid-template-rows:repeat(7,1fr);gap:10px}.gallery__box .div1{grid-area:1/1/3/2}.gallery__box .div2{grid-area:3/3/5/4}.gallery__box .div3{grid-area:5/1/7/2}.gallery__box .div4{grid-area:1/2/2/3}.gallery__box .div5{grid-area:1/3/2/4}.gallery__box .div6{grid-area:2/2/3/3}.gallery__box .div7{grid-area:2/3/3/4}.gallery__box .div8{grid-area:3/1/4/2}.gallery__box .div9{grid-area:3/2/4/3}.gallery__box .div10{grid-area:4/1/5/2}.gallery__box .div11{grid-area:4/2/5/3}.gallery__box .div12{grid-area:5/2/6/3}.gallery__box .div13{grid-area:5/3/6/4}.gallery__box .div14{grid-area:6/2/7/3}.gallery__box .div15{grid-area:6/3/7/4}.gallery__box .div16{grid-area:7/1/8/2}.gallery__box .div17{grid-area:7/2/8/3}.gallery__box .div18{grid-area:7/3/8/4}.gallery__box img{width:100%;height:280px;border:5px solid #00aeef;overflow:hidden}@media (max-width:991px){.gallery__box .parent{width:100%;display:grid;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(10,1fr);gap:10px}.gallery__box .div1{grid-area:1/1/3/2}.gallery__box .div2{grid-area:5/2/7/3}.gallery__box .div3{grid-area:9/1/11/2}.gallery__box .div4{grid-area:1/2/2/3}.gallery__box .div5{grid-area:2/2/3/3}.gallery__box .div6{grid-area:3/2/4/3}.gallery__box .div7{grid-area:4/2/5/3}.gallery__box .div8{grid-area:3/1/4/2}.gallery__box .div9{grid-area:4/1/5/2}.gallery__box .div10{grid-area:5/1/6/2}.gallery__box .div11{grid-area:6/1/7/2}.gallery__box .div12{grid-area:7/1/8/2}.gallery__box .div13{grid-area:8/1/9/2}.gallery__box .div14{grid-area:7/2/8/3}.gallery__box .div15{grid-area:8/2/9/3}.gallery__box .div16{grid-area:9/2/10/3}.gallery__box .div17{grid-area:10/2/11/3}.gallery__box .div18{display:none}.gallery__box img{border:5px solid #00aeef;overflow:hidden}}@media (max-width:600px){.gallery__box .parent{display:flex;justify-content:center;align-items:center;flex-direction:column}.gallery__box .parent img{width:300px;height:300px;border:3px solid #00aeef}}.diagram__box{justify-content:space-between}.diagram__box,.diagram__boxes{display:flex;flex-direction:column}.diagram__boxes{justify-content:center}@media (max-width:991px){.diagram__boxes{flex-direction:column}}.diagram__logo{display:flex;justify-content:center;align-items:center;margin:10px 0}@media (max-width:991px){.diagram__logo img{width:200px}}.diagram__table{display:flex;justify-content:center;align-items:stretch;flex-direction:column}.diagram__table--table{display:grid;width:100%;gap:20px}.diagram__table--table table,.diagram__table--table td,.diagram__table--table th{text-align:center;padding:10px 5px;font-weight:600;border:2px solid #00aeef;color:#00aeef}.diagram__table--table table{width:100%;gap:20px 0}.diagram__table--table th{width:25%;font-size:20px;border:2px solid #00aeef;color:#fff;background-color:#00aeef}@media (max-width:991px){.diagram__table--table td,.diagram__table--table td span,.diagram__table--table th{font-size:12px}}@media (max-width:456px){.diagram__table--kids{display:block}}@media (max-width:542px){.diagram__table--adults{display:block}}.diagram__title{display:flex;justify-content:center;align-items:center;flex-direction:column;margin:20px 0}.record__section{display:grid;gap:30px}.record__img{display:flex;transition:all .3s;padding:20px}.record__img img{width:100%;height:369px;border:10px double #00aeef;border-radius:10px;overflow:hidden;transition:all .3s}@media (max-width:991px){.record__img img{width:100%;height:300px}}.record__img [data-img=sample]:hover{transform:scale(1.05) rotate(-5deg)}.record__img [data-img=reverse]:hover{transform:scale(1.05) rotate(5deg)}@media (max-width:991px){.record__img{padding:10px}}.record__box{display:flex;flex-direction:row}@media (max-width:991px){.record__box{flex-direction:column}}.record__reverse{display:flex;flex-direction:row-reverse}@media (max-width:991px){.record__reverse{flex-direction:column}}.record__text{display:flex;justify-content:space-between;flex-direction:column;padding:20px}.record__text--boxes{gap:20px}@media (max-width:991px){.record__text{padding:10px}}.contact__box{display:flex;justify-content:center;align-items:center;flex-direction:row}@media (max-width:991px){.contact__box{flex-direction:column;gap:35px}}.contact__data{display:flex;justify-content:center;flex-direction:column;gap:35px}.contact__data .button{display:flex;justify-content:flex-start;align-items:center;gap:20px}@media (max-width:991px){.contact__data{gap:25px}}.contact__boxes{display:flex;justify-content:flex-start;flex-direction:column}.contact__boxes span{padding:3px 0}.contact__boxes span a{position:relative;text-decoration:none}.contact__boxes span a:hover{color:#00aeef}.contact__boxes span a:after{content:"";position:absolute;bottom:-5px;left:0;width:100%;height:3px;transform:scaleX(0);transform-origin:right;background-color:#00aeef;transition:transform .5s}.contact__boxes span a:hover:after{transform:scaleX(1);transform-origin:left}.contact__map{display:flex;justify-content:center;flex-direction:center;height:294px;border:10px double #00aeef;border-radius:10px;overflow:hidden}.navbar,.z-index{z-index:1}@media screen and (max-width:991px){.contact .heading,.diagram .heading,.gallery .heading,.record .heading{height:225px}.contact .heading h2,.diagram .heading h2,.gallery .heading h2,.record .heading h2{font-size:38px}}.section-bgc{background-color:#d9d9d9}.z-index{z-index:1}.bgc{transition:all .3s ease;background:rgba(3,3,3,.5019607843)!important}@media (max-width:991px){.show{opacity:1!important;visibility:visible!important}}.section-box{position:relative;top:-50px;width:100%;padding:40px 60px;border-radius:20px;color:#7a7a7a;background-color:#fff;box-shadow:5px 5px 5px rgba(0,0,0,.15)}@media (max-width:991px){.section-box{padding:16px}}.heading{display:flex;justify-content:center;align-items:center;width:100%;height:300px;margin-top:106px;background:linear-gradient(0deg,#007caa,#00aeef)}.wrapper{margin:0 auto;width:100%;max-width:1400px;padding:0 20px}@media (max-width:991px){.wrapper{padding:0 10px}}*,:after,:before{box-sizing:border-box;margin:0;padding:0}body,html{height:100%;font-family:Poppins,sans-serif;color:#7a7a7a;background-color:#070707}html{scroll-behavior:smooth;-moz-user-select:none;user-select:none;-webkit-user-select:none}a{text-decoration:none;color:#fff;color:#7a7a7a;transition:all .3s}button,input,select,textarea{font-family:inherit}button{border:none;cursor:pointer}textarea{resize:vertical}table{border-collapse:collapse;border-spacing:0}ul li{list-style:none}ol,ul{padding-left:0!important}li{transition:.3s}li:hover{color:#00aeef}dl,ol,ul{margin-bottom:0!important}span{font-size:18px}@media (max-width:991px){span{font-size:16px}}h1{text-align:center;font-size:90px;font-weight:600;color:#fff;letter-spacing:1px;text-shadow:2px 2px 5px #000}@media (max-width:991px){h1{font-size:70px}}@media (max-width:500px){h1{font-size:50px}}h2{margin-bottom:55px;font-size:50px;color:#fff;text-shadow:2px 2px 5px #000}h2,h3{font-weight:600}h3{font-size:36px;color:#00aeef}@media (max-width:991px){h3{text-align:center;font-size:24px}}button{padding:15px 30px;font-size:18px;font-weight:600;text-transform:uppercase;color:#fff;border-radius:8px;border:2px solid #00aeef;background-color:#00aeef;transition:all .3s}button:hover{color:#00aeef;background-color:#fff;transform:scale(1.1)}@media (max-width:991px){button{padding:10px 20px;font-size:16px}}.reverse{color:#00aeef;background-color:transparent}.reverse:hover{color:#fff;background-color:#00aeef;transform:scale(1.1)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
