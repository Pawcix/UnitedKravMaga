@media (max-width:991px){#nav-list{display:flex;visibility:hidden;opacity:0;transition:opacity .5s,visibility .5s}}.navbar{position:fixed;width:100%;top:0;font-size:18px;background-color:rgba(2,2,2,.7960784314);transition:background-color .5s ease}.navbar__logo{width:400px;height:90px;background:url(../img/UnitedKravMagaLogo.png);background-position:50%;background-repeat:no-repeat;transform:scale(.75) translateX(-60px)}@media (max-width:991px){.navbar__logo{width:120px;height:90px;background:url(../img/UnitedKravMagaIcon.png);background-position:50%;background-repeat:no-repeat;transform:scale(.75) translateX(-20px);z-index:1}}.navbar__box{display:flex;justify-content:space-between;align-items:center}.navbar__list{display:flex;gap:20px}.navbar__list li{position:relative}.navbar__list li a{position:relative;color:#fff;text-transform:uppercase;font-size:17px;letter-spacing:1px}@media (max-width:991px){.navbar__list li a{font-size:26px}}.navbar__list li:hover a{color:#00aeef}.navbar__list li:after{content:"";position:absolute;bottom:0;left:0;width:100%;height:3px;transform:scaleX(0);transform-origin:right;background-color:#00aeef;transition:transform .5s}.navbar__list li:hover:after{transform:scaleX(1);transform-origin:left}@media (max-width:991px){.navbar__list li{text-align:center;margin:0}}@media (max-width:991px){.navbar__list{position:absolute;display:none;justify-content:center;align-items:center;flex-direction:column;width:100%;height:100vh;top:0;right:0;bottom:0;left:0;background:rgba(2,2,2,.8509803922)}}.navbar__toggle{display:none;padding-right:10px}@media (max-width:991px){.navbar__toggle{display:block;z-index:1}}.navbar__icon{width:40px;height:35px;display:flex;justify-content:space-between;align-items:flex-end;flex-direction:column}.navbar__icon .bar{margin:4px 0;background-color:#fff;transition:transform .5s ease}.navbar__icon .bar:first-child{width:40px;height:3px}.navbar__icon .bar:nth-child(2){width:30px;height:3px;background-color:#00aeef;transition:opacity .3s}.navbar__icon .bar:nth-child(3){width:40px;height:3px}@media (max-width:991px){.navbar{font-size:26px;background-color:transparent;z-index:2;transition:all .5s ease!important}.navbar .active .bar{transition:transform .5s ease}.navbar .active .bar:first-child{transform:rotate(-45deg) translate(-6px,7px);background-color:#00aeef}.navbar .active .bar:nth-child(2){opacity:0;transition:opacity .3s}.navbar .active .bar:nth-child(3){transform:rotate(45deg) translate(-6px,-7px)}}.section-box{display:grid;gap:100px}@media (max-width:991px){.section-box{gap:25px}}.main__bgc{position:relative;height:100vh;background:url(../img/z-2.jpg);background-position:50%;background-size:cover;z-index:0}.main__bgc--dark{position:absolute;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.75);z-index:-10}.main__bgc--heading{display:flex;justify-content:center;align-items:center;flex-direction:column;height:100%;color:#fff}.main__bgc--heading h2{font-size:50px;font-family:poppinssemibold,"sans-serif";color:#00aeef}@media (max-width:991px){.main__bgc--heading h2{font-size:40px}}@media (max-width:500px){.main__bgc--heading h2{font-size:30px}}.main__section-one{flex-direction:row}.main__section-one,.main__section-one--logo{display:flex;justify-content:center;align-items:center}.main__section-one--logo{margin:20px 0}.main__section-one--logo img{width:300px}@media (max-width:991px){.main__section-one--logo img{width:200px}}.main__section-one--content{display:flex;justify-content:center;align-items:flex-start;flex-direction:column;gap:20px;padding:20px}@media (max-width:991px){.main__section-one--content{display:flex;justify-content:center;align-items:center;flex-direction:column;padding:10px}}@media (max-width:991px){.main__section-one{flex-direction:column}}.main__section-two{display:flex;justify-content:center;align-items:center;flex-direction:row-reverse}.main__section-two--content{display:flex;justify-content:center;align-items:flex-start;flex-direction:column;gap:20px;padding:20px}@media (max-width:991px){.main__section-two--content{display:flex;justify-content:center;align-items:center;flex-direction:column;padding:10px}}.main__section-two--logo{display:flex;justify-content:center;align-items:flex-end}.main__section-two--logo img{margin:20px;height:360px;border:5px solid #007ab8;border-radius:10px;overflow:hidden}@media (max-width:991px){.main__section-two--logo img{margin:20px 0}}@media (max-width:991px){.main__section-two{flex-direction:column}}.main__section-three--content{margin:20px 0;padding:10px}.main__section-three--content .swiper{width:100%;height:100%;margin-left:auto;margin-right:auto}.main__section-three--content .swiper-wrapper{width:100px;height:100%}.main__section-three--content .swiper-slide{display:flex;justify-content:center;align-items:center;flex-direction:column;padding:20px;width:100px;border-radius:20px;background-color:rgba(0,176,240,.075)}.main__section-three--content .swiper-slide img{margin:10px 0;width:150px}.main__section-three--content .swiper-slide p{text-align:center}.footer a{color:#fff}.footer a:hover,.footer h3{color:#00aeef}.footer__info{padding:25px 0;background-color:#070707}.footer__box{display:flex;justify-content:space-between;align-items:center;flex-direction:row}@media (max-width:991px){.footer__box{flex-direction:column;gap:20px 0}}.footer__menu{font-size:18px}.footer__logos{display:flex;justify-content:center;align-items:center;flex-direction:column}.footer__logos--google{transform:scale(.6)}.footer__logos--united{transform:scale(.75)}.footer__contact{display:flex;justify-content:flex-end;align-items:flex-end;flex-direction:column;text-align:end;gap:5px;transition:all .3s}.footer__contact--icons{font-size:36px}.footer__contact--icons:hover{color:#007ab8;transform:scale(1.2)}@media (max-width:991px){.footer__contact{justify-content:center;align-items:center}}.footer__author{padding:15px 0;text-align:center;color:#fff;background-color:#020202}.footer__author--author{display:flex;justify-content:center;align-items:center}.footer__author--author span{font-size:16px}@media (max-width:991px){.footer__author--author span{font-size:12px}}@media (max-width:450px){.footer__author--author span [data-author=author]{display:block}}.gallery__box .div1 img,.gallery__box .div2 img,.gallery__box .div3 img,.size-img{height:570px}.gallery__box{display:flex;justify-content:center;align-items:center}.gallery__box .parent{width:100%;display:grid;grid-template-columns:repeat(3,1fr);grid-template-rows:repeat(7,1fr);gap:10px}.gallery__box .div1{grid-area:1/1/3/2}.gallery__box .div2{grid-area:3/3/5/4}.gallery__box .div3{grid-area:5/1/7/2}.gallery__box .div4{grid-area:1/2/2/3}.gallery__box .div5{grid-area:1/3/2/4}.gallery__box .div6{grid-area:2/2/3/3}.gallery__box .div7{grid-area:2/3/3/4}.gallery__box .div8{grid-area:3/1/4/2}.gallery__box .div9{grid-area:3/2/4/3}.gallery__box .div10{grid-area:4/1/5/2}.gallery__box .div11{grid-area:4/2/5/3}.gallery__box .div12{grid-area:5/2/6/3}.gallery__box .div13{grid-area:5/3/6/4}.gallery__box .div14{grid-area:6/2/7/3}.gallery__box .div15{grid-area:6/3/7/4}.gallery__box .div16{grid-area:7/1/8/2}.gallery__box .div17{grid-area:7/2/8/3}.gallery__box .div18{grid-area:7/3/8/4}.gallery__box img{width:100%;height:280px;border:5px solid #007ab8;overflow:hidden}@media (max-width:991px){.gallery__box .parent{width:100%;display:grid;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(10,1fr);gap:10px}.gallery__box .div1{grid-area:1/1/3/2}.gallery__box .div2{grid-area:5/2/7/3}.gallery__box .div3{grid-area:9/1/11/2}.gallery__box .div4{grid-area:1/2/2/3}.gallery__box .div5{grid-area:2/2/3/3}.gallery__box .div6{grid-area:3/2/4/3}.gallery__box .div7{grid-area:4/2/5/3}.gallery__box .div8{grid-area:3/1/4/2}.gallery__box .div9{grid-area:4/1/5/2}.gallery__box .div10{grid-area:5/1/6/2}.gallery__box .div11{grid-area:6/1/7/2}.gallery__box .div12{grid-area:7/1/8/2}.gallery__box .div13{grid-area:8/1/9/2}.gallery__box .div14{grid-area:7/2/8/3}.gallery__box .div15{grid-area:8/2/9/3}.gallery__box .div16{grid-area:9/2/10/3}.gallery__box .div17{grid-area:10/2/11/3}.gallery__box .div18{display:none}.gallery__box img{border:5px solid #007ab8;overflow:hidden}}@media (max-width:600px){.gallery__box .parent{display:flex;justify-content:center;align-items:center;flex-direction:column}.gallery__box .parent img{width:300px;height:300px;border:3px solid #007ab8}}.diagram__box{justify-content:space-between}.diagram__box,.diagram__boxes{display:flex;flex-direction:column}.diagram__boxes{justify-content:center}@media (max-width:991px){.diagram__boxes{flex-direction:column}}.diagram__logo{display:flex;justify-content:center;align-items:center;margin:10px 0}.diagram__logo img{width:300px}@media (max-width:991px){.diagram__logo img{width:200px}}.diagram__table{display:flex;justify-content:center;align-items:stretch;flex-direction:column}.diagram__table--table{display:grid;width:100%;gap:20px}.diagram__table--table table,.diagram__table--table td,.diagram__table--table th{text-align:center;padding:10px 5px;color:#007ab8;font-family:poppinssemibold,"sans-serif";border:2px solid #007ab8}.diagram__table--table table{width:100%;gap:20px 0}.diagram__table--table th{width:25%;font-size:20px;border:2px solid #007ab8;color:#fff;background-color:#007ab8}@media (max-width:991px){.diagram__table--table td,.diagram__table--table td span,.diagram__table--table th{font-size:12px}}@media (max-width:456px){.diagram__table--kids{display:block}}@media (max-width:542px){.diagram__table--adults{display:block}}.diagram__title{display:flex;justify-content:center;align-items:center;flex-direction:column;margin:20px 0}.record__section{display:grid;gap:30px}.record__img{display:flex;transition:all .3s;padding:20px}.record__img img{width:100%;height:369px;border:5px solid #007ab8;border-radius:10px;overflow:hidden;transition:all .3s}@media (max-width:991px){.record__img img{width:100%;height:300px}}.record__img [data-img=sample]:hover{transform:scale(1.05) rotate(-5deg)}.record__img [data-img=reverse]:hover{transform:scale(1.05) rotate(5deg)}@media (max-width:991px){.record__img{padding:10px}}.record__box{display:flex;flex-direction:row}@media (max-width:991px){.record__box{flex-direction:column}}.record__reverse{display:flex;flex-direction:row-reverse}@media (max-width:991px){.record__reverse{flex-direction:column}}.record__text{display:flex;justify-content:space-between;flex-direction:column;padding:20px}.record__text--boxes{gap:20px}@media (max-width:991px){.record__text{padding:10px}}.contact__box{display:flex;justify-content:center;align-items:center;flex-direction:row}@media (max-width:991px){.contact__box{flex-direction:column;gap:35px}}.contact__data{display:flex;justify-content:center;flex-direction:column;gap:35px}.contact__data a{color:#595959}.contact__data .button{display:flex;justify-content:flex-start;align-items:center;gap:20px}@media (max-width:991px){.contact__data{gap:25px}}.contact__boxes{display:flex;justify-content:flex-start;flex-direction:column}.contact__boxes span{padding:3px 0}.contact__boxes span a{position:relative;text-decoration:none}.contact__boxes span a:hover{color:#007ab8}.contact__boxes span a:after{content:"";position:absolute;bottom:-5px;left:0;width:100%;height:3px;transform:scaleX(0);transform-origin:right;background-color:#007ab8;transition:transform .5s}.contact__boxes span a:hover:after{transform:scaleX(1);transform-origin:left}.contact__map{display:flex;justify-content:center;flex-direction:center;height:294px;border:5px solid #007ab8;border-radius:10px;overflow:hidden}@media screen and (max-width:991px){.contact .heading,.diagram .heading,.gallery .heading,.record .heading{height:225px}.contact .heading h2,.diagram .heading h2,.gallery .heading h2,.record .heading h2{font-size:38px}}.navbar,.z-index{z-index:1}.error{display:flex;justify-content:center;align-items:center;flex-direction:column;height:100vh}.error p{color:#fff;font-size:40px}@media (max-width:500px){.error p{font-size:20px}}.section-bgc{background-color:#d9d9d9}.z-index{z-index:1}.bgc{transition:all .3s ease;background:rgba(3,3,3,.5019607843)!important}@media (max-width:991px){.show{opacity:1!important;visibility:visible!important}}.section-box{position:relative;top:-50px;width:100%;padding:40px 60px;border-radius:20px;color:#595959;background-color:#fff;box-shadow:5px 5px 5px rgba(0,0,0,.15)}@media (max-width:991px){.section-box{padding:16px}}.heading{display:flex;justify-content:center;align-items:center;width:100%;height:300px;margin-top:106px;background:linear-gradient(0deg,#007caa,#00aeef)}.wrapper{margin:0 auto;width:100%;max-width:1400px;padding:0 20px}@media (max-width:991px){.wrapper{padding:0 10px}}@font-face{font-family:poppins;src:url(/src/fonts/poppins-regular-webfont.woff2) format("woff2"),url(/src/fonts/poppins-regular-webfont.woff) format("woff");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:poppinssemibold;src:url(/src/fonts/poppins-semibold-webfont.woff2) format("woff2"),url(/src/fonts/poppins-semibold-webfont.woff) format("woff");font-weight:600;font-style:normal;font-display:swap}*,:after,:before{box-sizing:border-box;margin:0;padding:0}body,html{height:100%;font-family:Poppins,sans-serif;color:#595959;background-color:#070707}html{scroll-behavior:smooth;-moz-user-select:none;user-select:none;-webkit-user-select:none}a{text-decoration:none;color:#fff;transition:all .3s}img{width:100%;height:auto}button,input,select,textarea{font-family:inherit}button{border:none;cursor:pointer}textarea{resize:vertical}table{border-collapse:collapse;border-spacing:0}ul li{list-style:none;color:#fff;cursor:pointer}@media (max-width:991px){ul li{text-align:center}}ol,ul{padding-left:0!important}li{transition:.3s}li:hover{color:#007ab8}dl,ol,ul{margin-bottom:0!important}span{font-size:18px}@media (max-width:991px){span{font-size:16px}}h1{text-align:center;font-size:90px;font-family:poppinssemibold,"sans-serif";color:#fff;letter-spacing:1px;text-shadow:2px 2px 5px #000}@media (max-width:991px){h1{font-size:70px}}@media (max-width:500px){h1{font-size:50px}}h2{margin-bottom:55px;font-size:50px;color:#fff;text-shadow:2px 2px 5px #000}h2,h3{font-family:poppinssemibold,"sans-serif"}h3{font-size:36px;color:#007ab8}@media (max-width:991px){h3{text-align:center;font-size:24px}}h4{margin-bottom:0;color:#007ab8}button{padding:15px 30px;font-size:18px;font-family:poppinssemibold,"sans-serif";text-transform:uppercase;color:#fff;border-radius:8px;border:2px solid #007ab8;background-color:#007ab8;transition:all .3s}button:hover{color:#007ab8;background-color:#fff;transform:scale(1.1)}@media (max-width:991px){button{padding:10px 20px;font-size:16px}}.reverse{color:#007ab8;background-color:transparent}.reverse:hover{color:#fff;background-color:#007ab8;transform:scale(1.1)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvX25hdi5zY3NzIiwibWFpbi5jc3MiLCJ1dGlsaXRpZXMvX2NvbG9ycy5zY3NzIiwidXRpbGl0aWVzL19taXhpbi5zY3NzIiwiY29tcG9uZW50cy9faW5kZXguc2NzcyIsInV0aWxpdGllcy9fZm9udHMuc2NzcyIsImNvbXBvbmVudHMvX2Zvb3Rlci5zY3NzIiwiY29tcG9uZW50cy9fZ2FsbGVyeS5zY3NzIiwiY29tcG9uZW50cy9fZGlhZ3JhbS5zY3NzIiwiY29tcG9uZW50cy9fcmVjb3JkLnNjc3MiLCJjb21wb25lbnRzL19jb250YWN0LnNjc3MiLCJjb21wb25lbnRzL19tZWRpYS5zY3NzIiwidXRpbGl0aWVzL19jbGFzc2VzLnNjc3MiLCJjb21wb25lbnRzL19lcnJvci5zY3NzIiwibWFpbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdJLHlCQURKLFVBRVEsYUFBQSxBQUNBLGtCQUFBLEFBQ0EsVUFBQSxBQUNBLHFDQUFBLENDc0VOLENBQ0YsQURuRUEsUUFDSSxlQUFBLEFBQ0EsV0FBQSxBQUNBLE1BQUEsQUFDQSxlQUFBLEFBQ0EseUNFUE0sQUZRTixvQ0FBQSxDQ3NFSixBRG5FSSxjRzRCQSxZQUFBLEFBQ0EsWUFBQSxBQStCQSw4Q0FBQSxBQUNBLHdCQUFBLEFBQ0EsNEJBQUEsQUFDQSxzQ0FBQSxDRllKLEFEdkVRLHlCQUpKLGNHNEJBLFlBQUEsQUFDQSxZQUFBLEFBK0JBLDhDQUFBLEFBQ0Esd0JBQUEsQUFDQSw0QkFBQSxBQUNBLHVDQUFBLEFIeERRLFNBQUEsQ0M4RVYsQ0FDRixBRDNFSSxhR3FFQSxhQUFBLEFBQ0EsOEJBQUEsQUFDQSxrQkFBQSxDRlNKLEFENUVJLGNBQ0ksYUFBQSxBQUNBLFFBQUEsQ0M4RVIsQUQ1RVEsaUJBQ0ksaUJBQUEsQ0M4RVosQUQ1RVksbUJBQ0ksa0JBQUEsQUFDQSxXRTVDUixBRjZDUSx5QkFBQSxBQUNBLGVBQUEsQUFDQSxrQkFBQSxDQzhFaEIsQUQ1RWdCLHlCQVBKLG1C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QSxHRTFtREksZUFBQSxBVzRGQSxhWnhIWSxDRHNvRGhCLEFhNWdESSx5QkFKSixHQUtRLGtCQUFBLEFBQ0EsY0FBQSxDYitnRE4sQ0FDRixBYTVnREEsR0FDSSxnQkFBQSxBQUNBLGFabElZLENEaXBEaEIsQWE1Z0RBLE9BQ0ksa0JBQUEsQVgxR0EsZUFBQSxBQUNBLHlDRTVCWSxBU3VJWix5QkFBQSxBQUNBLFdaM0lJLEFZNElKLGtCQUFBLEFBQ0EseUJBQUEsQUFDQSx5Qlo1SVksQUNtRVosa0JBQUEsQ0YwbERKLEFhOWdESSxhQUNJLGNaaEpRLEFZaUpSLHNCWm5KQSxBQ3dDSixvQkFBQSxDRjRuREosQWE3Z0RJLHlCQWhCSixPQWlCUSxrQkFBQSxBQUNBLGNBQUEsQ2JnaEROLENBQ0YsQWE3Z0RBLFNBQ0ksY1o1SlksQVk2SlosNEJBQUEsQ2JnaERKLEFhOWdESSxlQUNJLFdabEtBLEFZbUtBLHlCWmpLUSxBQ3NDWixvQkFBQSxDRjRvREoiLCJmaWxlIjoibWFpbi5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQHVzZSBcIi4uL3V0aWxpdGllcy9hbGwuc2Nzc1wiIGFzICo7XHJcblxyXG4jbmF2LWxpc3Qge1xyXG4gICAgQG1lZGlhKG1heC13aWR0aDo5OTFweCkge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuNXMsIHZpc2liaWxpdHkgLjVzO1xyXG4gICAgfVxyXG59XHJcblxyXG4ubmF2YmFyIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJG5hdi1iZ2M7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuNXMgZWFzZTtcclxuICAgIEBleHRlbmQgLnotaW5kZXggIW9wdGlvbmFsO1xyXG5cclxuICAgICZfX2xvZ28ge1xyXG4gICAgICAgIEBpbmNsdWRlIHdpZHRoLWhlaWdodCg0MDBweCwgOTBweCk7XHJcbiAgICAgICAgQGluY2x1ZGUgaW1nLXNpemUoXCIuLi9pbWcvVW5pdGVkS3Jhdk1hZ2FMb2dvLnBuZ1wiLCAwLjc1LCAtNjBweCk7XHJcblxyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOjk5MXB4KSB7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHdpZHRoLWhlaWdodCgxMjBweCwgOTBweCk7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGltZy1zaXplKFwiLi4vaW1nL1VuaXRlZEtyYXZNYWdhSWNvbi5wbmdcIiwgMC43NSwgLTIwcHgpO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19ib3gge1xyXG4gICAgICAgIEBpbmNsdWRlIGRpc3BsYXktanVzdGlmeS1hbGlnbihmbGV4LCBzcGFjZS1iZXR3ZWVuLCBjZW50ZXIpO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2xpc3Qge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZ2FwOiAyMHB4O1xyXG5cclxuICAgICAgICBsaSB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcclxuICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE3cHg7XHJcbiAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG5cclxuICAgICAgICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOjk5MXB4KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNnB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmOmhvdmVyIGEge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgY29udGVudC1wb3NpdGlvbjtcclxuICAgICAgICAgICAgICAgIGJvdHRvbTogMHB4O1xyXG4gICAgICAgICAgICAgICAgbGVmdDogMHB4O1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgd2lkdGgtaGVpZ2h0KDEwMCUsIDNweCk7XHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0tc2NhbGUtWCgwKTtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0O1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuNXM7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICY6aG92ZXI6YWZ0ZXIge1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtLXNjYWxlLVgoMSk7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDo5OTFweCkge1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDo5OTFweCkge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGRpc3BsYXktanVzdGlmeS1hbGlnbi1mbGV4KG5vbmUsIGNlbnRlciwgY2VudGVyLCBjb2x1bW4pO1xyXG4gICAgICAgICAgICBAaW5jbHVkZSB3aWR0aC1oZWlnaHQoMTAwJSwgMTAwdmgpO1xyXG4gICAgICAgICAgICBAaW5jbHVkZSB0b3AtcmlnaHQtYm90dG9tLWxlZnQoMHB4LCAwcHgsIDBweCwgMHB4KTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogJG5hdi1tb2JpbGUtYmdjO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX190b2dnbGUge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTBweDtcclxuXHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6OTkxcHgpIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2ljb24ge1xyXG4gICAgICAgIEBpbmNsdWRlIHdpZHRoLWhlaWdodCg0MHB4LCAzNXB4KTtcclxuICAgICAgICBAaW5jbHVkZSBkaXNwbGF5LWp1c3RpZnktYWxpZ24tZmxleChmbGV4LCBzcGFjZS1iZXR3ZWVuLCBmbGV4LWVuZCwgY29sdW1uKTtcclxuXHJcbiAgICAgICAgLmJhciB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogNHB4IDA7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC41cyBlYXNlO1xyXG5cclxuICAgICAgICAgICAgJjpudGgtY2hpbGQoMSkge1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgd2lkdGgtaGVpZ2h0KDQwcHgsIDNweCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICY6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHdpZHRoLWhlaWdodCgzMHB4LCAzcHgpO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmOm50aC1jaGlsZCgzKSB7XHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB3aWR0aC1oZWlnaHQoNDBweCwgM3B4KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDo5OTFweCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjZweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICB6LWluZGV4OiAyO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAuNXMgZWFzZSAhaW1wb3J0YW50O1xyXG5cclxuICAgICAgICAuYWN0aXZlIHtcclxuICAgICAgICAgICAgLmJhciB7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjVzIGVhc2U7XHJcblxyXG4gICAgICAgICAgICAgICAgJjpudGgtY2hpbGQoMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybS1yLXQoLTQ1ZGVnLCAtNnB4LCA3cHgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJjpudGgtY2hpbGQoMikge1xyXG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3M7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJjpudGgtY2hpbGQoMykge1xyXG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybS1yLXQoNDVkZWcsIC02cHgsIC03cHgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLnNlY3Rpb24tYmdjIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Q5ZDlkOTtcbn1cblxuLnotaW5kZXgsIC5uYXZiYXIge1xuICB6LWluZGV4OiAxO1xufVxuXG4uYmdjIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogcmdiYSgzLCAzLCAzLCAwLjUwMTk2MDc4NDMpICFpbXBvcnRhbnQ7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAuc2hvdyB7XG4gICAgb3BhY2l0eTogMSAhaW1wb3J0YW50O1xuICAgIHZpc2liaWxpdHk6IHZpc2libGUgIWltcG9ydGFudDtcbiAgfVxufVxuLnNlY3Rpb24tYm94IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IC01MHB4O1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogNDBweCA2MHB4O1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBjb2xvcjogIzU5NTk1OTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm94LXNoYWRvdzogNXB4IDVweCA1cHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5zZWN0aW9uLWJveCB7XG4gICAgcGFkZGluZzogMTZweDtcbiAgfVxufVxuLmhlYWRpbmcge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMzAwcHg7XG4gIG1hcmdpbi10b3A6IDEwNnB4O1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMGRlZywgcmdiKDAsIDEyNCwgMTcwKSAwJSwgcmdiKDAsIDE3NCwgMjM5KSAxMDAlKTtcbn1cblxuLndyYXBwZXIge1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTQwMHB4O1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAud3JhcHBlciB7XG4gICAgcGFkZGluZzogMCAxMHB4O1xuICB9XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwicG9wcGluc1wiO1xuICBzcmM6IHVybChcIi9zcmMvZm9udHMvcG9wcGlucy1yZWd1bGFyLXdlYmZvbnQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi9zcmMvZm9udHMvcG9wcGlucy1yZWd1bGFyLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJwb3BwaW5zc2VtaWJvbGRcIjtcbiAgc3JjOiB1cmwoXCIvc3JjL2ZvbnRzL3BvcHBpbnMtc2VtaWJvbGQtd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL3NyYy9mb250cy9wb3BwaW5zLXNlbWlib2xkLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAjbmF2LWxpc3Qge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzLCB2aXNpYmlsaXR5IDAuNXM7XG4gIH1cbn1cblxuLm5hdmJhciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMDtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIsIDIsIDIsIDAuNzk2MDc4NDMxNCk7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC41cyBlYXNlO1xufVxuLm5hdmJhcl9fbG9nbyB7XG4gIHdpZHRoOiA0MDBweDtcbiAgaGVpZ2h0OiA5MHB4O1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWcvVW5pdGVkS3Jhdk1hZ2FMb2dvLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICB0cmFuc2Zvcm06IHNjYWxlKDAuNzUpIHRyYW5zbGF0ZVgoLTYwcHgpO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5uYXZiYXJfX2xvZ28ge1xuICAgIHdpZHRoOiAxMjBweDtcbiAgICBoZWlnaHQ6IDkwcHg7XG4gICAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL1VuaXRlZEtyYXZNYWdhSWNvbi5wbmdcIik7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjc1KSB0cmFuc2xhdGVYKC0yMHB4KTtcbiAgICB6LWluZGV4OiAxO1xuICB9XG59XG4ubmF2YmFyX19ib3gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4ubmF2YmFyX19saXN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZ2FwOiAyMHB4O1xufVxuLm5hdmJhcl9fbGlzdCBsaSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5uYXZiYXJfX2xpc3QgbGkgYSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtc2l6ZTogMTdweDtcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAubmF2YmFyX19saXN0IGxpIGEge1xuICAgIGZvbnQtc2l6ZTogMjZweDtcbiAgfVxufVxuLm5hdmJhcl9fbGlzdCBsaTpob3ZlciBhIHtcbiAgY29sb3I6ICMwMGFlZWY7XG59XG4ubmF2YmFyX19saXN0IGxpOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDBweDtcbiAgbGVmdDogMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAzcHg7XG4gIHRyYW5zZm9ybTogc2NhbGVYKDApO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiByaWdodDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwYWVlZjtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNXM7XG59XG4ubmF2YmFyX19saXN0IGxpOmhvdmVyOmFmdGVyIHtcbiAgdHJhbnNmb3JtOiBzY2FsZVgoMSk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQ7XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLm5hdmJhcl9fbGlzdCBsaSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbjogMDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5uYXZiYXJfX2xpc3Qge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIHRvcDogMHB4O1xuICAgIHJpZ2h0OiAwcHg7XG4gICAgYm90dG9tOiAwcHg7XG4gICAgbGVmdDogMHB4O1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMiwgMiwgMiwgMC44NTA5ODAzOTIyKTtcbiAgfVxufVxuLm5hdmJhcl9fdG9nZ2xlIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgcGFkZGluZy1yaWdodDogMTBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAubmF2YmFyX190b2dnbGUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHotaW5kZXg6IDE7XG4gIH1cbn1cbi5uYXZiYXJfX2ljb24ge1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiAzNXB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbi5uYXZiYXJfX2ljb24gLmJhciB7XG4gIG1hcmdpbjogNHB4IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjVzIGVhc2U7XG59XG4ubmF2YmFyX19pY29uIC5iYXI6bnRoLWNoaWxkKDEpIHtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogM3B4O1xufVxuLm5hdmJhcl9faWNvbiAuYmFyOm50aC1jaGlsZCgyKSB7XG4gIHdpZHRoOiAzMHB4O1xuICBoZWlnaHQ6IDNweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwYWVlZjtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzO1xufVxuLm5hdmJhcl9faWNvbiAuYmFyOm50aC1jaGlsZCgzKSB7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDNweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAubmF2YmFyIHtcbiAgICBmb250LXNpemU6IDI2cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgei1pbmRleDogMjtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLm5hdmJhciAuYWN0aXZlIC5iYXIge1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjVzIGVhc2U7XG4gIH1cbiAgLm5hdmJhciAuYWN0aXZlIC5iYXI6bnRoLWNoaWxkKDEpIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpIHRyYW5zbGF0ZSgtNnB4LCA3cHgpO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGFlZWY7XG4gIH1cbiAgLm5hdmJhciAuYWN0aXZlIC5iYXI6bnRoLWNoaWxkKDIpIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcbiAgfVxuICAubmF2YmFyIC5hY3RpdmUgLmJhcjpudGgtY2hpbGQoMykge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSB0cmFuc2xhdGUoLTZweCwgLTdweCk7XG4gIH1cbn1cblxuLnNlY3Rpb24tYmdjIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Q5ZDlkOTtcbn1cblxuLnotaW5kZXgsIC5uYXZiYXIge1xuICB6LWluZGV4OiAxO1xufVxuXG4uYmdjIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogcmdiYSgzLCAzLCAzLCAwLjUwMTk2MDc4NDMpICFpbXBvcnRhbnQ7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAuc2hvdyB7XG4gICAgb3BhY2l0eTogMSAhaW1wb3J0YW50O1xuICAgIHZpc2liaWxpdHk6IHZpc2libGUgIWltcG9ydGFudDtcbiAgfVxufVxuLnNlY3Rpb24tYm94IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IC01MHB4O1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogNDBweCA2MHB4O1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBjb2xvcjogIzU5NTk1OTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm94LXNoYWRvdzogNXB4IDVweCA1cHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5zZWN0aW9uLWJveCB7XG4gICAgcGFkZGluZzogMTZweDtcbiAgfVxufVxuLmhlYWRpbmcge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMzAwcHg7XG4gIG1hcmdpbi10b3A6IDEwNnB4O1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMGRlZywgcmdiKDAsIDEyNCwgMTcwKSAwJSwgcmdiKDAsIDE3NCwgMjM5KSAxMDAlKTtcbn1cblxuLndyYXBwZXIge1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTQwMHB4O1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAud3JhcHBlciB7XG4gICAgcGFkZGluZzogMCAxMHB4O1xuICB9XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwicG9wcGluc1wiO1xuICBzcmM6IHVybChcIi9zcmMvZm9udHMvcG9wcGlucy1yZWd1bGFyLXdlYmZvbnQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi9zcmMvZm9udHMvcG9wcGlucy1yZWd1bGFyLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJwb3BwaW5zc2VtaWJvbGRcIjtcbiAgc3JjOiB1cmwoXCIvc3JjL2ZvbnRzL3BvcHBpbnMtc2VtaWJvbGQtd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL3NyYy9mb250cy9wb3BwaW5zLXNlbWlib2xkLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbi5zZWN0aW9uLWJveCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdhcDogMTAwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLnNlY3Rpb24tYm94IHtcbiAgICBnYXA6IDI1cHg7XG4gIH1cbn1cblxuLm1haW5fX2JnYyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL3otMi5qcGdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgei1pbmRleDogMDtcbn1cbi5tYWluX19iZ2MtLWRhcmsge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjc1KTtcbiAgei1pbmRleDogLTEwO1xufVxuLm1haW5fX2JnYy0taGVhZGluZyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuLm1haW5fX2JnYy0taGVhZGluZyBoMiB7XG4gIGZvbnQtc2l6ZTogNTBweDtcbiAgZm9udC1mYW1pbHk6IFwicG9wcGluc3NlbWlib2xkXCIsIFwic2Fucy1zZXJpZlwiO1xuICBjb2xvcjogIzAwYWVlZjtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAubWFpbl9fYmdjLS1oZWFkaW5nIGgyIHtcbiAgICBmb250LXNpemU6IDQwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xuICAubWFpbl9fYmdjLS1oZWFkaW5nIGgyIHtcbiAgICBmb250LXNpemU6IDMwcHg7XG4gIH1cbn1cbi5tYWluX19zZWN0aW9uLW9uZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xufVxuLm1haW5fX3NlY3Rpb24tb25lLS1sb2dvIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogMjBweCAwO1xufVxuLm1haW5fX3NlY3Rpb24tb25lLS1sb2dvIGltZyB7XG4gIHdpZHRoOiAzMDBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAubWFpbl9fc2VjdGlvbi1vbmUtLWxvZ28gaW1nIHtcbiAgICB3aWR0aDogMjAwcHg7XG4gIH1cbn1cbi5tYWluX19zZWN0aW9uLW9uZS0tY29udGVudCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZ2FwOiAyMHB4O1xuICBwYWRkaW5nOiAyMHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5tYWluX19zZWN0aW9uLW9uZS0tY29udGVudCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgcGFkZGluZzogMTBweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5tYWluX19zZWN0aW9uLW9uZSB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxufVxuLm1haW5fX3NlY3Rpb24tdHdvIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbn1cbi5tYWluX19zZWN0aW9uLXR3by0tY29udGVudCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZ2FwOiAyMHB4O1xuICBwYWRkaW5nOiAyMHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5tYWluX19zZWN0aW9uLXR3by0tY29udGVudCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgcGFkZGluZzogMTBweDtcbiAgfVxufVxuLm1haW5fX3NlY3Rpb24tdHdvLS1sb2dvIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbn1cbi5tYWluX19zZWN0aW9uLXR3by0tbG9nbyBpbWcge1xuICBtYXJnaW46IDIwcHg7XG4gIGhlaWdodDogMzYwcHg7XG4gIGJvcmRlcjogNXB4IHNvbGlkICMwMDdBQjg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLm1haW5fX3NlY3Rpb24tdHdvLS1sb2dvIGltZyB7XG4gICAgbWFyZ2luOiAyMHB4IDBweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5tYWluX19zZWN0aW9uLXR3byB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxufVxuLm1haW5fX3NlY3Rpb24tdGhyZWUtLWNvbnRlbnQge1xuICBtYXJnaW46IDIwcHggMDtcbiAgcGFkZGluZzogMTBweDtcbn1cbi5tYWluX19zZWN0aW9uLXRocmVlLS1jb250ZW50IC5zd2lwZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuLm1haW5fX3NlY3Rpb24tdGhyZWUtLWNvbnRlbnQgLnN3aXBlci13cmFwcGVyIHtcbiAgd2lkdGg6IDEwMHB4O1xuICBoZWlnaHQ6IDEwMCU7XG59XG4ubWFpbl9fc2VjdGlvbi10aHJlZS0tY29udGVudCAuc3dpcGVyLXNsaWRlIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHBhZGRpbmc6IDIwcHg7XG4gIHdpZHRoOiAxMDBweDtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAxNzYsIDI0MCwgMC4wNzUpO1xufVxuLm1haW5fX3NlY3Rpb24tdGhyZWUtLWNvbnRlbnQgLnN3aXBlci1zbGlkZSBpbWcge1xuICBtYXJnaW46IDEwcHggMDtcbiAgd2lkdGg6IDE1MHB4O1xufVxuLm1haW5fX3NlY3Rpb24tdGhyZWUtLWNvbnRlbnQgLnN3aXBlci1zbGlkZSBwIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uc2VjdGlvbi1iZ2Mge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDlkOWQ5O1xufVxuXG4uei1pbmRleCwgLm5hdmJhciB7XG4gIHotaW5kZXg6IDE7XG59XG5cbi5iZ2Mge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDMsIDMsIDMsIDAuNTAxOTYwNzg0MykgIWltcG9ydGFudDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5zaG93IHtcbiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZSAhaW1wb3J0YW50O1xuICB9XG59XG4uc2VjdGlvbi1ib3gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogLTUwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiA0MHB4IDYwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIGNvbG9yOiAjNTk1OTU5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBib3gtc2hhZG93OiA1cHggNXB4IDVweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLnNlY3Rpb24tYm94IHtcbiAgICBwYWRkaW5nOiAxNnB4O1xuICB9XG59XG4uaGVhZGluZyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAzMDBweDtcbiAgbWFyZ2luLXRvcDogMTA2cHg7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLCByZ2IoMCwgMTI0LCAxNzApIDAlLCByZ2IoMCwgMTc0LCAyMzkpIDEwMCUpO1xufVxuXG4ud3JhcHBlciB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxNDAwcHg7XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC53cmFwcGVyIHtcbiAgICBwYWRkaW5nOiAwIDEwcHg7XG4gIH1cbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJwb3BwaW5zXCI7XG4gIHNyYzogdXJsKFwiL3NyYy9mb250cy9wb3BwaW5zLXJlZ3VsYXItd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL3NyYy9mb250cy9wb3BwaW5zLXJlZ3VsYXItd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcInBvcHBpbnNzZW1pYm9sZFwiO1xuICBzcmM6IHVybChcIi9zcmMvZm9udHMvcG9wcGlucy1zZW1pYm9sZC13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIvc3JjL2ZvbnRzL3BvcHBpbnMtc2VtaWJvbGQtd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuLmZvb3RlciBhIHtcbiAgY29sb3I6ICNmZmZmZmY7XG59XG4uZm9vdGVyIGE6aG92ZXIge1xuICBjb2xvcjogIzAwYWVlZjtcbn1cbi5mb290ZXIgaDMge1xuICBjb2xvcjogIzAwYWVlZjtcbn1cbi5mb290ZXJfX2luZm8ge1xuICBwYWRkaW5nOiAyNXB4IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwNzA3MDc7XG59XG4uZm9vdGVyX19ib3gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLmZvb3Rlcl9fYm94IHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGdhcDogMjBweCAwO1xuICB9XG59XG4uZm9vdGVyX19tZW51IHtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuLmZvb3Rlcl9fbG9nb3Mge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbi5mb290ZXJfX2xvZ29zLS1nb29nbGUge1xuICB0cmFuc2Zvcm06IHNjYWxlKDAuNik7XG59XG4uZm9vdGVyX19sb2dvcy0tdW5pdGVkIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgwLjc1KTtcbn1cbi5mb290ZXJfX2NvbnRhY3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHRleHQtYWxpZ246IGVuZDtcbiAgZ2FwOiA1cHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xufVxuLmZvb3Rlcl9fY29udGFjdC0taWNvbnMge1xuICBmb250LXNpemU6IDM2cHg7XG59XG4uZm9vdGVyX19jb250YWN0LS1pY29uczpob3ZlciB7XG4gIGNvbG9yOiAjMDA3QUI4O1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLmZvb3Rlcl9fY29udGFjdCB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxufVxuLmZvb3Rlcl9fYXV0aG9yIHtcbiAgcGFkZGluZzogMTVweCAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDIwMjAyO1xufVxuLmZvb3Rlcl9fYXV0aG9yLS1hdXRob3Ige1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5mb290ZXJfX2F1dGhvci0tYXV0aG9yIHNwYW4ge1xuICBmb250LXNpemU6IDE2cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLmZvb3Rlcl9fYXV0aG9yLS1hdXRob3Igc3BhbiB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNDUwcHgpIHtcbiAgLmZvb3Rlcl9fYXV0aG9yLS1hdXRob3Igc3BhbiBbZGF0YS1hdXRob3I9YXV0aG9yXSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cblxuLnNlY3Rpb24tYmdjIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Q5ZDlkOTtcbn1cblxuLnotaW5kZXgsIC5uYXZiYXIge1xuICB6LWluZGV4OiAxO1xufVxuXG4uYmdjIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogcmdiYSgzLCAzLCAzLCAwLjUwMTk2MDc4NDMpICFpbXBvcnRhbnQ7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAuc2hvdyB7XG4gICAgb3BhY2l0eTogMSAhaW1wb3J0YW50O1xuICAgIHZpc2liaWxpdHk6IHZpc2libGUgIWltcG9ydGFudDtcbiAgfVxufVxuLnNlY3Rpb24tYm94IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IC01MHB4O1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogNDBweCA2MHB4O1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBjb2xvcjogIzU5NTk1OTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm94LXNoYWRvdzogNXB4IDVweCA1cHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5zZWN0aW9uLWJveCB7XG4gICAgcGFkZGluZzogMTZweDtcbiAgfVxufVxuLmhlYWRpbmcge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMzAwcHg7XG4gIG1hcmdpbi10b3A6IDEwNnB4O1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMGRlZywgcmdiKDAsIDEyNCwgMTcwKSAwJSwgcmdiKDAsIDE3NCwgMjM5KSAxMDAlKTtcbn1cblxuLndyYXBwZXIge1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTQwMHB4O1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAud3JhcHBlciB7XG4gICAgcGFkZGluZzogMCAxMHB4O1xuICB9XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwicG9wcGluc1wiO1xuICBzcmM6IHVybChcIi9zcmMvZm9udHMvcG9wcGlucy1yZWd1bGFyLXdlYmZvbnQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi9zcmMvZm9udHMvcG9wcGlucy1yZWd1bGFyLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJwb3BwaW5zc2VtaWJvbGRcIjtcbiAgc3JjOiB1cmwoXCIvc3JjL2ZvbnRzL3BvcHBpbnMtc2VtaWJvbGQtd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL3NyYy9mb250cy9wb3BwaW5zLXNlbWlib2xkLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbi5zaXplLWltZywgLmdhbGxlcnlfX2JveCAuZGl2MyBpbWcsIC5nYWxsZXJ5X19ib3ggLmRpdjIgaW1nLCAuZ2FsbGVyeV9fYm94IC5kaXYxIGltZyB7XG4gIGhlaWdodDogNTcwcHg7XG59XG5cbi5nYWxsZXJ5X19ib3gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5nYWxsZXJ5X19ib3ggLnBhcmVudCB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg3LCAxZnIpO1xuICBnYXA6IDEwcHg7XG59XG4uZ2FsbGVyeV9fYm94IC5kaXYxIHtcbiAgZ3JpZC1hcmVhOiAxLzEvMy8yO1xufVxuLmdhbGxlcnlfX2JveCAuZGl2MiB7XG4gIGdyaWQtYXJlYTogMy8zLzUvNDtcbn1cbi5nYWxsZXJ5X19ib3ggLmRpdjMge1xuICBncmlkLWFyZWE6IDUvMS83LzI7XG59XG4uZ2FsbGVyeV9fYm94IC5kaXY0IHtcbiAgZ3JpZC1hcmVhOiAxLzIvMi8zO1xufVxuLmdhbGxlcnlfX2JveCAuZGl2NSB7XG4gIGdyaWQtYXJlYTogMS8zLzIvNDtcbn1cbi5nYWxsZXJ5X19ib3ggLmRpdjYge1xuICBncmlkLWFyZWE6IDIvMi8zLzM7XG59XG4uZ2FsbGVyeV9fYm94IC5kaXY3IHtcbiAgZ3JpZC1hcmVhOiAyLzMvMy80O1xufVxuLmdhbGxlcnlfX2JveCAuZGl2OCB7XG4gIGdyaWQtYXJlYTogMy8xLzQvMjtcbn1cbi5nYWxsZXJ5X19ib3ggLmRpdjkge1xuICBncmlkLWFyZWE6IDMvMi80LzM7XG59XG4uZ2FsbGVyeV9fYm94IC5kaXYxMCB7XG4gIGdyaWQtYXJlYTogNC8xLzUvMjtcbn1cbi5nYWxsZXJ5X19ib3ggLmRpdjExIHtcbiAgZ3JpZC1hcmVhOiA0LzIvNS8zO1xufVxuLmdhbGxlcnlfX2JveCAuZGl2MTIge1xuICBncmlkLWFyZWE6IDUvMi82LzM7XG59XG4uZ2FsbGVyeV9fYm94IC5kaXYxMyB7XG4gIGdyaWQtYXJlYTogNS8zLzYvNDtcbn1cbi5nYWxsZXJ5X19ib3ggLmRpdjE0IHtcbiAgZ3JpZC1hcmVhOiA2LzIvNy8zO1xufVxuLmdhbGxlcnlfX2JveCAuZGl2MTUge1xuICBncmlkLWFyZWE6IDYvMy83LzQ7XG59XG4uZ2FsbGVyeV9fYm94IC5kaXYxNiB7XG4gIGdyaWQtYXJlYTogNy8xLzgvMjtcbn1cbi5nYWxsZXJ5X19ib3ggLmRpdjE3IHtcbiAgZ3JpZC1hcmVhOiA3LzIvOC8zO1xufVxuLmdhbGxlcnlfX2JveCAuZGl2MTgge1xuICBncmlkLWFyZWE6IDcvMy84LzQ7XG59XG4uZ2FsbGVyeV9fYm94IGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDI4MHB4O1xuICBib3JkZXI6IDVweCBzb2xpZCAjMDA3QUI4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5nYWxsZXJ5X19ib3ggLnBhcmVudCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xuICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDEwLCAxZnIpO1xuICAgIGdhcDogMTBweDtcbiAgfVxuICAuZ2FsbGVyeV9fYm94IC5kaXYxIHtcbiAgICBncmlkLWFyZWE6IDEvMS8zLzI7XG4gIH1cbiAgLmdhbGxlcnlfX2JveCAuZGl2MiB7XG4gICAgZ3JpZC1hcmVhOiA1LzIvNy8zO1xuICB9XG4gIC5nYWxsZXJ5X19ib3ggLmRpdjMge1xuICAgIGdyaWQtYXJlYTogOS8xLzExLzI7XG4gIH1cbiAgLmdhbGxlcnlfX2JveCAuZGl2NCB7XG4gICAgZ3JpZC1hcmVhOiAxLzIvMi8zO1xuICB9XG4gIC5nYWxsZXJ5X19ib3ggLmRpdjUge1xuICAgIGdyaWQtYXJlYTogMi8yLzMvMztcbiAgfVxuICAuZ2FsbGVyeV9fYm94IC5kaXY2IHtcbiAgICBncmlkLWFyZWE6IDMvMi80LzM7XG4gIH1cbiAgLmdhbGxlcnlfX2JveCAuZGl2NyB7XG4gICAgZ3JpZC1hcmVhOiA0LzIvNS8zO1xuICB9XG4gIC5nYWxsZXJ5X19ib3ggLmRpdjgge1xuICAgIGdyaWQtYXJlYTogMy8xLzQvMjtcbiAgfVxuICAuZ2FsbGVyeV9fYm94IC5kaXY5IHtcbiAgICBncmlkLWFyZWE6IDQvMS81LzI7XG4gIH1cbiAgLmdhbGxlcnlfX2JveCAuZGl2MTAge1xuICAgIGdyaWQtYXJlYTogNS8xLzYvMjtcbiAgfVxuICAuZ2FsbGVyeV9fYm94IC5kaXYxMSB7XG4gICAgZ3JpZC1hcmVhOiA2LzEvNy8yO1xuICB9XG4gIC5nYWxsZXJ5X19ib3ggLmRpdjEyIHtcbiAgICBncmlkLWFyZWE6IDcvMS84LzI7XG4gIH1cbiAgLmdhbGxlcnlfX2JveCAuZGl2MTMge1xuICAgIGdyaWQtYXJlYTogOC8xLzkvMjtcbiAgfVxuICAuZ2FsbGVyeV9fYm94IC5kaXYxNCB7XG4gICAgZ3JpZC1hcmVhOiA3LzIvOC8zO1xuICB9XG4gIC5nYWxsZXJ5X19ib3ggLmRpdjE1IHtcbiAgICBncmlkLWFyZWE6IDgvMi85LzM7XG4gIH1cbiAgLmdhbGxlcnlfX2JveCAuZGl2MTYge1xuICAgIGdyaWQtYXJlYTogOS8yLzEwLzM7XG4gIH1cbiAgLmdhbGxlcnlfX2JveCAuZGl2MTcge1xuICAgIGdyaWQtYXJlYTogMTAvMi8xMS8zO1xuICB9XG4gIC5nYWxsZXJ5X19ib3ggLmRpdjE4IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5nYWxsZXJ5X19ib3ggaW1nIHtcbiAgICBib3JkZXI6IDVweCBzb2xpZCAjMDA3QUI4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAuZ2FsbGVyeV9fYm94IC5wYXJlbnQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIC5nYWxsZXJ5X19ib3ggLnBhcmVudCBpbWcge1xuICAgIHdpZHRoOiAzMDBweDtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICAgIGJvcmRlcjogM3B4IHNvbGlkICMwMDdBQjg7XG4gIH1cbn1cblxuLnNlY3Rpb24tYmdjIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Q5ZDlkOTtcbn1cblxuLnotaW5kZXgsIC5uYXZiYXIge1xuICB6LWluZGV4OiAxO1xufVxuXG4uYmdjIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgYmFja2dyb3VuZDogcmdiYSgzLCAzLCAzLCAwLjUwMTk2MDc4NDMpICFpbXBvcnRhbnQ7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAuc2hvdyB7XG4gICAgb3BhY2l0eTogMSAhaW1wb3J0YW50O1xuICAgIHZpc2liaWxpdHk6IHZpc2libGUgIWltcG9ydGFudDtcbiAgfVxufVxuLnNlY3Rpb24tYm94IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IC01MHB4O1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogNDBweCA2MHB4O1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBjb2xvcjogIzU5NTk1OTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm94LXNoYWRvdzogNXB4IDVweCA1cHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5zZWN0aW9uLWJveCB7XG4gICAgcGFkZGluZzogMTZweDtcbiAgfVxufVxuLmhlYWRpbmcge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMzAwcHg7XG4gIG1hcmdpbi10b3A6IDEwNnB4O1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMGRlZywgcmdiKDAsIDEyNCwgMTcwKSAwJSwgcmdiKDAsIDE3NCwgMjM5KSAxMDAlKTtcbn1cblxuLndyYXBwZXIge1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTQwMHB4O1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAud3JhcHBlciB7XG4gICAgcGFkZGluZzogMCAxMHB4O1xuICB9XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwicG9wcGluc1wiO1xuICBzcmM6IHVybChcIi9zcmMvZm9udHMvcG9wcGlucy1yZWd1bGFyLXdlYmZvbnQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi9zcmMvZm9udHMvcG9wcGlucy1yZWd1bGFyLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJwb3BwaW5zc2VtaWJvbGRcIjtcbiAgc3JjOiB1cmwoXCIvc3JjL2ZvbnRzL3BvcHBpbnMtc2VtaWJvbGQtd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL3NyYy9mb250cy9wb3BwaW5zLXNlbWlib2xkLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbi5kaWFncmFtX19ib3gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4uZGlhZ3JhbV9fYm94ZXMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAuZGlhZ3JhbV9fYm94ZXMge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbn1cbi5kaWFncmFtX19sb2dvIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbjogMTBweCAwO1xufVxuLmRpYWdyYW1fX2xvZ28gaW1nIHtcbiAgd2lkdGg6IDMwMHB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5kaWFncmFtX19sb2dvIGltZyB7XG4gICAgd2lkdGg6IDIwMHB4O1xuICB9XG59XG4uZGlhZ3JhbV9fdGFibGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4uZGlhZ3JhbV9fdGFibGUtLXRhYmxlIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgd2lkdGg6IDEwMCU7XG4gIGdhcDogMjBweDtcbn1cbi5kaWFncmFtX190YWJsZS0tdGFibGUgdGFibGUsXG4uZGlhZ3JhbV9fdGFibGUtLXRhYmxlIHRoLFxuLmRpYWdyYW1fX3RhYmxlLS10YWJsZSB0ZCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogMTBweCA1cHg7XG4gIGNvbG9yOiAjMDA3QUI4O1xuICBmb250LWZhbWlseTogXCJwb3BwaW5zc2VtaWJvbGRcIiwgXCJzYW5zLXNlcmlmXCI7XG4gIGJvcmRlcjogMnB4IHNvbGlkICMwMDdBQjg7XG59XG4uZGlhZ3JhbV9fdGFibGUtLXRhYmxlIHRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGdhcDogMjBweCAwcHg7XG59XG4uZGlhZ3JhbV9fdGFibGUtLXRhYmxlIHRoIHtcbiAgd2lkdGg6IDI1JTtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCAjMDA3QUI4O1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN0FCODtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAuZGlhZ3JhbV9fdGFibGUtLXRhYmxlIHRoIHtcbiAgICBmb250LXNpemU6IDEycHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAuZGlhZ3JhbV9fdGFibGUtLXRhYmxlIHRkIHNwYW4ge1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5kaWFncmFtX190YWJsZS0tdGFibGUgdGQge1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDQ1NnB4KSB7XG4gIC5kaWFncmFtX190YWJsZS0ta2lkcyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1NDJweCkge1xuICAuZGlhZ3JhbV9fdGFibGUtLWFkdWx0cyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cbi5kaWFncmFtX190aXRsZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXJnaW46IDIwcHggMHB4O1xufVxuXG4uc2VjdGlvbi1iZ2Mge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDlkOWQ5O1xufVxuXG4uei1pbmRleCwgLm5hdmJhciB7XG4gIHotaW5kZXg6IDE7XG59XG5cbi5iZ2Mge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDMsIDMsIDMsIDAuNTAxOTYwNzg0MykgIWltcG9ydGFudDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5zaG93IHtcbiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZSAhaW1wb3J0YW50O1xuICB9XG59XG4uc2VjdGlvbi1ib3gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogLTUwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiA0MHB4IDYwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIGNvbG9yOiAjNTk1OTU5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBib3gtc2hhZG93OiA1cHggNXB4IDVweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLnNlY3Rpb24tYm94IHtcbiAgICBwYWRkaW5nOiAxNnB4O1xuICB9XG59XG4uaGVhZGluZyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAzMDBweDtcbiAgbWFyZ2luLXRvcDogMTA2cHg7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLCByZ2IoMCwgMTI0LCAxNzApIDAlLCByZ2IoMCwgMTc0LCAyMzkpIDEwMCUpO1xufVxuXG4ud3JhcHBlciB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxNDAwcHg7XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC53cmFwcGVyIHtcbiAgICBwYWRkaW5nOiAwIDEwcHg7XG4gIH1cbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJwb3BwaW5zXCI7XG4gIHNyYzogdXJsKFwiL3NyYy9mb250cy9wb3BwaW5zLXJlZ3VsYXItd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL3NyYy9mb250cy9wb3BwaW5zLXJlZ3VsYXItd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcInBvcHBpbnNzZW1pYm9sZFwiO1xuICBzcmM6IHVybChcIi9zcmMvZm9udHMvcG9wcGlucy1zZW1pYm9sZC13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIvc3JjL2ZvbnRzL3BvcHBpbnMtc2VtaWJvbGQtd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuLnJlY29yZF9fc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdhcDogMzBweDtcbn1cbi5yZWNvcmRfX2ltZyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICBwYWRkaW5nOiAyMHB4O1xufVxuLnJlY29yZF9faW1nIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDM2OXB4O1xuICBib3JkZXI6IDVweCBzb2xpZCAjMDA3QUI4O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAucmVjb3JkX19pbWcgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICB9XG59XG4ucmVjb3JkX19pbWcgW2RhdGEtaW1nPXNhbXBsZV06aG92ZXIge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMDUpIHJvdGF0ZSgtNWRlZyk7XG59XG4ucmVjb3JkX19pbWcgW2RhdGEtaW1nPXJldmVyc2VdOmhvdmVyIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KSByb3RhdGUoNWRlZyk7XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLnJlY29yZF9faW1nIHtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICB9XG59XG4ucmVjb3JkX19ib3gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5yZWNvcmRfX2JveCB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxufVxuLnJlY29yZF9fcmV2ZXJzZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAucmVjb3JkX19yZXZlcnNlIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG59XG4ucmVjb3JkX190ZXh0IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwYWRkaW5nOiAyMHB4O1xufVxuLnJlY29yZF9fdGV4dC0tYm94ZXMge1xuICBnYXA6IDIwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLnJlY29yZF9fdGV4dCB7XG4gICAgcGFkZGluZzogMTBweDtcbiAgfVxufVxuXG4uc2VjdGlvbi1iZ2Mge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDlkOWQ5O1xufVxuXG4uei1pbmRleCwgLm5hdmJhciB7XG4gIHotaW5kZXg6IDE7XG59XG5cbi5iZ2Mge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDMsIDMsIDMsIDAuNTAxOTYwNzg0MykgIWltcG9ydGFudDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5zaG93IHtcbiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZSAhaW1wb3J0YW50O1xuICB9XG59XG4uc2VjdGlvbi1ib3gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogLTUwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiA0MHB4IDYwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIGNvbG9yOiAjNTk1OTU5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBib3gtc2hhZG93OiA1cHggNXB4IDVweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLnNlY3Rpb24tYm94IHtcbiAgICBwYWRkaW5nOiAxNnB4O1xuICB9XG59XG4uaGVhZGluZyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAzMDBweDtcbiAgbWFyZ2luLXRvcDogMTA2cHg7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLCByZ2IoMCwgMTI0LCAxNzApIDAlLCByZ2IoMCwgMTc0LCAyMzkpIDEwMCUpO1xufVxuXG4ud3JhcHBlciB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxNDAwcHg7XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC53cmFwcGVyIHtcbiAgICBwYWRkaW5nOiAwIDEwcHg7XG4gIH1cbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJwb3BwaW5zXCI7XG4gIHNyYzogdXJsKFwiL3NyYy9mb250cy9wb3BwaW5zLXJlZ3VsYXItd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL3NyYy9mb250cy9wb3BwaW5zLXJlZ3VsYXItd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcInBvcHBpbnNzZW1pYm9sZFwiO1xuICBzcmM6IHVybChcIi9zcmMvZm9udHMvcG9wcGlucy1zZW1pYm9sZC13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIvc3JjL2ZvbnRzL3BvcHBpbnMtc2VtaWJvbGQtd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuLmNvbnRhY3RfX2JveCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5jb250YWN0X19ib3gge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZ2FwOiAzNXB4O1xuICB9XG59XG4uY29udGFjdF9fZGF0YSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6IDM1cHg7XG59XG4uY29udGFjdF9fZGF0YSBhIHtcbiAgY29sb3I6ICM1OTU5NTk7XG59XG4uY29udGFjdF9fZGF0YSAuYnV0dG9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBnYXA6IDIwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLmNvbnRhY3RfX2RhdGEge1xuICAgIGdhcDogMjVweDtcbiAgfVxufVxuLmNvbnRhY3RfX2JveGVzIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLmNvbnRhY3RfX2JveGVzIHNwYW4ge1xuICBwYWRkaW5nOiAzcHggMDtcbn1cbi5jb250YWN0X19ib3hlcyBzcGFuIGEge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbi5jb250YWN0X19ib3hlcyBzcGFuIGE6aG92ZXIge1xuICBjb2xvcjogIzAwN0FCODtcbn1cbi5jb250YWN0X19ib3hlcyBzcGFuIGE6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogLTVweDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogM3B4O1xuICB0cmFuc2Zvcm06IHNjYWxlWCgwKTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDdBQjg7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjVzO1xufVxuLmNvbnRhY3RfX2JveGVzIHNwYW4gYTpob3ZlcjphZnRlciB7XG4gIHRyYW5zZm9ybTogc2NhbGVYKDEpO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0O1xufVxuLmNvbnRhY3RfX21hcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY2VudGVyO1xuICBoZWlnaHQ6IDI5NHB4O1xuICBib3JkZXI6IDVweCBzb2xpZCAjMDA3QUI4O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uc2VjdGlvbi1iZ2Mge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDlkOWQ5O1xufVxuXG4uei1pbmRleCwgLm5hdmJhciB7XG4gIHotaW5kZXg6IDE7XG59XG5cbi5iZ2Mge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDMsIDMsIDMsIDAuNTAxOTYwNzg0MykgIWltcG9ydGFudDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC5zaG93IHtcbiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZSAhaW1wb3J0YW50O1xuICB9XG59XG4uc2VjdGlvbi1ib3gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogLTUwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiA0MHB4IDYwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIGNvbG9yOiAjNTk1OTU5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBib3gtc2hhZG93OiA1cHggNXB4IDVweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLnNlY3Rpb24tYm94IHtcbiAgICBwYWRkaW5nOiAxNnB4O1xuICB9XG59XG4uaGVhZGluZyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAzMDBweDtcbiAgbWFyZ2luLXRvcDogMTA2cHg7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLCByZ2IoMCwgMTI0LCAxNzApIDAlLCByZ2IoMCwgMTc0LCAyMzkpIDEwMCUpO1xufVxuXG4ud3JhcHBlciB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxNDAwcHg7XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIC53cmFwcGVyIHtcbiAgICBwYWRkaW5nOiAwIDEwcHg7XG4gIH1cbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJwb3BwaW5zXCI7XG4gIHNyYzogdXJsKFwiL3NyYy9mb250cy9wb3BwaW5zLXJlZ3VsYXItd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL3NyYy9mb250cy9wb3BwaW5zLXJlZ3VsYXItd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcInBvcHBpbnNzZW1pYm9sZFwiO1xuICBzcmM6IHVybChcIi9zcmMvZm9udHMvcG9wcGlucy1zZW1pYm9sZC13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIvc3JjL2ZvbnRzL3BvcHBpbnMtc2VtaWJvbGQtd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLmdhbGxlcnkgLmhlYWRpbmcsXG4gIC5kaWFncmFtIC5oZWFkaW5nLFxuICAucmVjb3JkIC5oZWFkaW5nLFxuICAuY29udGFjdCAuaGVhZGluZyB7XG4gICAgaGVpZ2h0OiAyMjVweDtcbiAgfVxuICAuZ2FsbGVyeSAuaGVhZGluZyBoMixcbiAgLmRpYWdyYW0gLmhlYWRpbmcgaDIsXG4gIC5yZWNvcmQgLmhlYWRpbmcgaDIsXG4gIC5jb250YWN0IC5oZWFkaW5nIGgyIHtcbiAgICBmb250LXNpemU6IDM4cHg7XG4gIH1cbn1cbi5zZWN0aW9uLWJnYyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkOWQ5ZDk7XG59XG5cbi56LWluZGV4LCAubmF2YmFyIHtcbiAgei1pbmRleDogMTtcbn1cblxuLmJnYyB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IHJnYmEoMywgMywgMywgMC41MDE5NjA3ODQzKSAhaW1wb3J0YW50O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLnNob3cge1xuICAgIG9wYWNpdHk6IDEgIWltcG9ydGFudDtcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlICFpbXBvcnRhbnQ7XG4gIH1cbn1cbi5zZWN0aW9uLWJveCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAtNTBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDQwcHggNjBweDtcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgY29sb3I6ICM1OTU5NTk7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIGJveC1zaGFkb3c6IDVweCA1cHggNXB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAuc2VjdGlvbi1ib3gge1xuICAgIHBhZGRpbmc6IDE2cHg7XG4gIH1cbn1cbi5oZWFkaW5nIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDMwMHB4O1xuICBtYXJnaW4tdG9wOiAxMDZweDtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDBkZWcsIHJnYigwLCAxMjQsIDE3MCkgMCUsIHJnYigwLCAxNzQsIDIzOSkgMTAwJSk7XG59XG5cbi53cmFwcGVyIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDE0MDBweDtcbiAgcGFkZGluZzogMCAyMHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLndyYXBwZXIge1xuICAgIHBhZGRpbmc6IDAgMTBweDtcbiAgfVxufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcInBvcHBpbnNcIjtcbiAgc3JjOiB1cmwoXCIvc3JjL2ZvbnRzL3BvcHBpbnMtcmVndWxhci13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIvc3JjL2ZvbnRzL3BvcHBpbnMtcmVndWxhci13ZWJmb250LndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwicG9wcGluc3NlbWlib2xkXCI7XG4gIHNyYzogdXJsKFwiL3NyYy9mb250cy9wb3BwaW5zLXNlbWlib2xkLXdlYmZvbnQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi9zcmMvZm9udHMvcG9wcGlucy1zZW1pYm9sZC13ZWJmb250LndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG4uZXJyb3Ige1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgaGVpZ2h0OiAxMDB2aDtcbn1cbi5lcnJvciBwIHtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGZvbnQtc2l6ZTogNDBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xuICAuZXJyb3IgcCB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICB9XG59XG5cbi5zZWN0aW9uLWJnYyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkOWQ5ZDk7XG59XG5cbi56LWluZGV4IHtcbiAgei1pbmRleDogMTtcbn1cblxuLmJnYyB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGJhY2tncm91bmQ6IHJnYmEoMywgMywgMywgMC41MDE5NjA3ODQzKSAhaW1wb3J0YW50O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLnNob3cge1xuICAgIG9wYWNpdHk6IDEgIWltcG9ydGFudDtcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuLnNlY3Rpb24tYm94IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IC01MHB4O1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogNDBweCA2MHB4O1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBjb2xvcjogIzU5NTk1OTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm94LXNoYWRvdzogNXB4IDVweCA1cHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICAuc2VjdGlvbi1ib3gge1xuICAgIHBhZGRpbmc6IDE2cHg7XG4gIH1cbn1cblxuLmhlYWRpbmcge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMzAwcHg7XG4gIG1hcmdpbi10b3A6IDEwNnB4O1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMGRlZywgcmdiKDAsIDEyNCwgMTcwKSAwJSwgcmdiKDAsIDE3NCwgMjM5KSAxMDAlKTtcbn1cblxuLndyYXBwZXIge1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTQwMHB4O1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgLndyYXBwZXIge1xuICAgIHBhZGRpbmc6IDAgMTBweDtcbiAgfVxufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwicG9wcGluc1wiO1xuICBzcmM6IHVybChcIi9zcmMvZm9udHMvcG9wcGlucy1yZWd1bGFyLXdlYmZvbnQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi9zcmMvZm9udHMvcG9wcGlucy1yZWd1bGFyLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJwb3BwaW5zc2VtaWJvbGRcIjtcbiAgc3JjOiB1cmwoXCIvc3JjL2ZvbnRzL3BvcHBpbnMtc2VtaWJvbGQtd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL3NyYy9mb250cy9wb3BwaW5zLXNlbWlib2xkLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbiosXG4qOjphZnRlcixcbio6OmJlZm9yZSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuaHRtbCxcbmJvZHkge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGZvbnQtZmFtaWx5OiBcIlBvcHBpbnNcIiwgc2Fucy1zZXJpZjtcbiAgY29sb3I6ICM1OTU5NTk7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwNzA3MDc7XG59XG5cbmh0bWwge1xuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbn1cblxuaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbn1cblxuaW5wdXQsXG5idXR0b24sXG50ZXh0YXJlYSxcbnNlbGVjdCB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xufVxuXG5idXR0b24ge1xuICBib3JkZXI6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxudGV4dGFyZWEge1xuICByZXNpemU6IHZlcnRpY2FsO1xufVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG51bCBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgdWwgbGkge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxufVxuXG5vbCxcbnVsIHtcbiAgcGFkZGluZy1sZWZ0OiAwICFpbXBvcnRhbnQ7XG59XG5cbmxpIHtcbiAgdHJhbnNpdGlvbjogMC4zcztcbn1cbmxpOmhvdmVyIHtcbiAgY29sb3I6ICMwMDdBQjg7XG59XG5cbmRsLFxub2wsXG51bCB7XG4gIG1hcmdpbi1ib3R0b206IDByZW0gIWltcG9ydGFudDtcbn1cblxuc3BhbiB7XG4gIGZvbnQtc2l6ZTogMThweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICBzcGFuIHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gIH1cbn1cblxuaDEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogOTBweDtcbiAgZm9udC1mYW1pbHk6IFwicG9wcGluc3NlbWlib2xkXCIsIFwic2Fucy1zZXJpZlwiO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbiAgdGV4dC1zaGFkb3c6IDJweCAycHggNXB4IGJsYWNrO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIGgxIHtcbiAgICBmb250LXNpemU6IDcwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xuICBoMSB7XG4gICAgZm9udC1zaXplOiA1MHB4O1xuICB9XG59XG5cbmgyIHtcbiAgbWFyZ2luLWJvdHRvbTogNTVweDtcbiAgZm9udC1zaXplOiA1MHB4O1xuICBmb250LWZhbWlseTogXCJwb3BwaW5zc2VtaWJvbGRcIiwgXCJzYW5zLXNlcmlmXCI7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICB0ZXh0LXNoYWRvdzogMnB4IDJweCA1cHggYmxhY2s7XG59XG5cbmgzIHtcbiAgZm9udC1zaXplOiAzNnB4O1xuICBmb250LWZhbWlseTogXCJwb3BwaW5zc2VtaWJvbGRcIiwgXCJzYW5zLXNlcmlmXCI7XG4gIGNvbG9yOiAjMDA3QUI4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XG4gIGgzIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICB9XG59XG5cbmg0IHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgY29sb3I6ICMwMDdBQjg7XG59XG5cbmJ1dHRvbiB7XG4gIHBhZGRpbmc6IDE1cHggMzBweDtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBmb250LWZhbWlseTogXCJwb3BwaW5zc2VtaWJvbGRcIiwgXCJzYW5zLXNlcmlmXCI7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGJvcmRlcjogMnB4IHNvbGlkICMwMDdBQjg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDdBQjg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xufVxuYnV0dG9uOmhvdmVyIHtcbiAgY29sb3I6ICMwMDdBQjg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTFweCkge1xuICBidXR0b24ge1xuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gIH1cbn1cblxuLnJldmVyc2Uge1xuICBjb2xvcjogIzAwN0FCODtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG4ucmV2ZXJzZTpob3ZlciB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3QUI4O1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG59IiwiJHdoaXRlOiAjZmZmZmZmO1xyXG4kYmxhY2s6ICMwMDAwMDA7XHJcbiRwcmltYXJ5LWNvbG9yOiAjMDA3QUI4O1xyXG4kc2Vjb25kYXJ5LWNvbG9yOiAjMDBhZWVmO1xyXG5cclxuLy8gVGV4dCA6IFxyXG4kdGV4dC1jb2xvcjogIzU5NTk1OTtcclxuXHJcbi8vIE5hdmlnYXRpb24gOlxyXG4kbmF2LWJnYzogIzAyMDIwMmNiO1xyXG4kbmF2LW1vYmlsZS1iZ2M6ICMwMjAyMDJkOTtcclxuJG5hdi1tb2JpbGUtYmdjLVk6ICMwMzAzMDM4MDtcclxuXHJcbi8vIEJhY2tncm91ZG4tSGVhZGluZyA6XHJcbiRoZWFkaW5nLWJnYzogbGluZWFyLWdyYWRpZW50KDBkZWcsIHJnYmEoMCwgMTI0LCAxNzAsIDEpIDAlLCByZ2JhKDAsIDE3NCwgMjM5LCAxKSAxMDAlKTtcclxuXHJcbi8vIFdoaXRlLXNlY3Rpb24gOiBcclxuJHNlY3Rpb24tYmdjOiAjZDlkOWQ5O1xyXG5cclxuLy8gRm9vdGVyIDpcclxuJGZvb3Rlci1pbmZvLWJnYzogIzA3MDcwNztcclxuJGZvb3Rlci1hdXRob3ItYmdjOiAjMDIwMjAyO1xyXG5cclxuLy8gU2hhZG93IDpcclxuJHNoYWRvdy1zZWN0aW9uLWJnYzogcmdiYSgwLCAwLCAwLCAwLjE1KTsiLCJAbWl4aW4ganVzdGlmeS1hbGlnbiB7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbkBtaXhpbiBjb250ZW50LXBvc2l0aW9uIHtcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG59XHJcblxyXG5AbWl4aW4gYm9yZGVyLXJhZGl1cy1vdmVyZmxvdyB7XHJcbiAgICBib3JkZXI6IDVweCBzb2xpZCAkcHJpbWFyeS1jb2xvcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG5AbWl4aW4gYm9yZGVyLW92ZXJmbG93IHtcclxuICAgIGJvcmRlcjogNXB4IHNvbGlkICRwcmltYXJ5LWNvbG9yO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuQG1peGluIGdyaWQtZ2FsbGVyeSgkdjEsICR2Mikge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoJHYxLCAxZnIpO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoJHYyLCAxZnIpO1xyXG4gICAgZ2FwOiAxMHB4O1xyXG59XHJcblxyXG5AbWl4aW4gZm9udC13ZWlnaHQoJHYxKSB7XHJcbiAgICBmb250LXNpemU6ICgkdjEpO1xyXG4gICAgZm9udC1mYW1pbHk6ICRzZW1pYm9sZC1mb250O1xyXG59XHJcblxyXG5AbWl4aW4gd2lkdGgtaGVpZ2h0KCR2MSwgJHYyKSB7XHJcbiAgICB3aWR0aDogKCR2MSk7XHJcbiAgICBoZWlnaHQ6ICgkdjIpO1xyXG59XHJcblxyXG5AbWl4aW4gdHJhbnNmb3JtLXNjYWxlKCR2KSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKCR2KTtcclxufVxyXG5cclxuQG1peGluIHRyYW5zZm9ybS1zY2FsZS1YKCR2MSkge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgoJHYxKTtcclxufVxyXG5cclxuQG1peGluIHdpZHRoLWhlaWdodCgkdjEsICR2Mikge1xyXG4gICAgd2lkdGg6ICgkdjEpO1xyXG4gICAgaGVpZ2h0OiAoJHYyKTtcclxufVxyXG5cclxuQG1peGluIHRleHQtc2hhZG93KCR2MSwgJHYyLCAkdjMsICR2NCkge1xyXG4gICAgdGV4dC1zaGFkb3c6ICgkdjEpKCR2MikoJHYzKSgkdjQpO1xyXG59XHJcblxyXG5AbWl4aW4gYm94LXNoYWRvdygkdjEsICR2MiwgJHYzLCAkdjQpIHtcclxuICAgIGJveC1zaGFkb3c6ICgkdjEpKCR2MikoJHYzKSgkdjQpO1xyXG59XHJcblxyXG5AbWl4aW4gdHJhbnNmb3JtLXItdCgkdjEsICR2MiwgJHYzKSB7XHJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgoJHYxKSkgdHJhbnNsYXRlKCR2MiwgJHYzKTtcclxufVxyXG5cclxuQG1peGluIHRyYW5zZm9ybS1zY2FsZS1yb3RhdGUoJHYxLCAkdjIpIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoJHYxKSByb3RhdGUoJHYyKTtcclxufVxyXG5cclxuQG1peGluIHRyYW5zaXRpb24oJHYxLCAkdjIpIHtcclxuICAgIHRyYW5zaXRpb246ICgkdjEpKCR2Mik7XHJcbn1cclxuXHJcbkBtaXhpbiB0b3AtcmlnaHQtYm90dG9tLWxlZnQoJHYxLCAkdjIsICR2MywgJHY0KSB7XHJcbiAgICB0b3A6ICgkdjEpO1xyXG4gICAgcmlnaHQ6ICgkdjIpO1xyXG4gICAgYm90dG9tOiAoJHYzKTtcclxuICAgIGxlZnQ6ICgkdjQpO1xyXG59XHJcblxyXG5AbWl4aW4gaW1nLXNpemUoJHYxLCAkdjIsICR2Mykge1xyXG4gICAgYmFja2dyb3VuZDogdXJsKCR2MSk7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgkdjIpIHRyYW5zbGF0ZVgoJHYzKTtcclxufVxyXG5cclxuQG1peGluIGJhY2tncm91bmQtaW1nKCR2MSkge1xyXG4gICAgYmFja2dyb3VuZDogdXJsKCR2MSk7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG59XHJcblxyXG5AbWl4aW4gZGlzcGxheS1qdXN0aWZ5LWFsaWduLWZsZXgoJHYxLCAkdjIsICR2MywgJHY0KSB7XHJcbiAgICBkaXNwbGF5OiAoJHYxKTtcclxuICAgIGp1c3RpZnktY29udGVudDogKCR2Mik7XHJcbiAgICBhbGlnbi1pdGVtczogKCR2Myk7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogKCR2NCk7XHJcbn1cclxuXHJcbkBtaXhpbiBkaXNwbGF5LWp1c3RpZnktYWxpZ24oJHYxLCAkdjIsICR2Mykge1xyXG4gICAgZGlzcGxheTogKCR2MSk7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6ICgkdjIpO1xyXG4gICAgYWxpZ24taXRlbXM6ICgkdjMpO1xyXG59XHJcblxyXG5AbWl4aW4gZGlzcGxheS1qdXN0aWZ5LWZsZXgoJHYxLCAkdjIsICR2Mykge1xyXG4gICAgZGlzcGxheTogKCR2MSk7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6ICgkdjIpO1xyXG4gICAgZmxleC1kaXJlY3Rpb246ICgkdjMpO1xyXG59IiwiQHVzZSBcIi4uL3V0aWxpdGllcy9hbGwuc2Nzc1wiIGFzICo7XHJcblxyXG4uc2VjdGlvbi1ib3gge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdhcDogMTAwcHg7XHJcblxyXG4gICAgQG1lZGlhKG1heC13aWR0aDo5OTFweCkge1xyXG4gICAgICAgIGdhcDogMjVweDtcclxuICAgIH1cclxufVxyXG5cclxuLm1haW4ge1xyXG4gICAgJl9fYmdjIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICBAaW5jbHVkZSBiYWNrZ3JvdW5kLWltZyhcIi4uL2ltZy96LTIuanBnXCIpO1xyXG4gICAgICAgIHotaW5kZXg6IDA7XHJcblxyXG4gICAgICAgICYtLWRhcmsge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgQGluY2x1ZGUgd2lkdGgtaGVpZ2h0KDEwMCUsIDEwMCUpO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNzUpO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAtMTA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLS1oZWFkaW5nIHtcclxuICAgICAgICAgICAgQGluY2x1ZGUgZGlzcGxheS1qdXN0aWZ5LWFsaWduLWZsZXgoZmxleCwgY2VudGVyLCBjZW50ZXIsIGNvbHVtbik7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcclxuXHJcbiAgICAgICAgICAgIGgyIHtcclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGZvbnQtd2VpZ2h0KDUwcHgpO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XHJcblxyXG4gICAgICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6OTkxcHgpIHtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6NTAwcHgpIHtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDMwcHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fc2VjdGlvbi1vbmUge1xyXG4gICAgICAgIEBpbmNsdWRlIGRpc3BsYXktanVzdGlmeS1hbGlnbi1mbGV4KGZsZXgsIGNlbnRlciwgY2VudGVyLCByb3cpO1xyXG5cclxuICAgICAgICAmLS1sb2dvIHtcclxuICAgICAgICAgICAgQGluY2x1ZGUgZGlzcGxheS1qdXN0aWZ5LWFsaWduKGZsZXgsIGNlbnRlciwgY2VudGVyKTtcclxuICAgICAgICAgICAgbWFyZ2luOiAyMHB4IDA7XHJcblxyXG4gICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDMwMHB4O1xyXG5cclxuICAgICAgICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOjk5MXB4KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLS1jb250ZW50IHtcclxuICAgICAgICAgICAgQGluY2x1ZGUgZGlzcGxheS1qdXN0aWZ5LWFsaWduLWZsZXgoZmxleCwgY2VudGVyLCBmbGV4LXN0YXJ0LCBjb2x1bW4pO1xyXG4gICAgICAgICAgICBnYXA6IDIwcHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDIwcHg7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDo5OTFweCkge1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgZGlzcGxheS1qdXN0aWZ5LWFsaWduLWZsZXgoZmxleCwgY2VudGVyLCBjZW50ZXIsIGNvbHVtbik7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAbWVkaWEobWF4LXdpZHRoOjk5MXB4KSB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX3NlY3Rpb24tdHdvIHtcclxuICAgICAgICBAaW5jbHVkZSBkaXNwbGF5LWp1c3RpZnktYWxpZ24tZmxleChmbGV4LCBjZW50ZXIsIGNlbnRlciwgcm93LXJldmVyc2UpO1xyXG5cclxuICAgICAgICAmLS1jb250ZW50IHtcclxuICAgICAgICAgICAgQGluY2x1ZGUgZGlzcGxheS1qdXN0aWZ5LWFsaWduLWZsZXgoZmxleCwgY2VudGVyLCBmbGV4LXN0YXJ0LCBjb2x1bW4pO1xyXG4gICAgICAgICAgICBnYXA6IDIwcHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDIwcHg7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDo5OTFweCkge1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgZGlzcGxheS1qdXN0aWZ5LWFsaWduLWZsZXgoZmxleCwgY2VudGVyLCBjZW50ZXIsIGNvbHVtbik7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLS1sb2dvIHtcclxuICAgICAgICAgICAgQGluY2x1ZGUgZGlzcGxheS1qdXN0aWZ5LWFsaWduKGZsZXgsIGNlbnRlciwgZmxleC1lbmQpO1xyXG5cclxuICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMjBweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMzYwcHg7XHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBib3JkZXItcmFkaXVzLW92ZXJmbG93O1xyXG5cclxuICAgICAgICAgICAgICAgIEBtZWRpYShtYXgtd2lkdGg6OTkxcHgpIHtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDIwcHggMHB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAbWVkaWEobWF4LXdpZHRoOjk5MXB4KSB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX3NlY3Rpb24tdGhyZWUge1xyXG4gICAgICAgICYtLWNvbnRlbnQge1xyXG4gICAgICAgICAgICBtYXJnaW46IDIwcHggMDtcclxuICAgICAgICAgICAgcGFkZGluZzogMTBweDtcclxuXHJcbiAgICAgICAgICAgIC5zd2lwZXIge1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgd2lkdGgtaGVpZ2h0KDEwMCUsIDEwMCUpO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC5zd2lwZXItd3JhcHBlciB7XHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB3aWR0aC1oZWlnaHQoMTAwcHgsIDEwMCUpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuc3dpcGVyLXNsaWRlIHtcclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGRpc3BsYXktanVzdGlmeS1hbGlnbi1mbGV4KGZsZXgsIGNlbnRlciwgY2VudGVyLCBjb2x1bW4pO1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMjBweDtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDBweDtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDE3NiwgMjQwLCAwLjA3NSk7XHJcblxyXG4gICAgICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDEwcHggMDtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTUwcHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgcCB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiQHVzZSBcIi4vbWl4aW5cIiBhcyAqO1xyXG5cclxuJHJlZ3VsYXItZm9udDogJ3BvcHBpbnMnLCAnc2Fucy1zZXJpZic7XHJcbiRzZW1pYm9sZC1mb250OiAncG9wcGluc3NlbWlib2xkJywgJ3NhbnMtc2VyaWYnO1xyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ3BvcHBpbnMnO1xyXG4gICAgc3JjOiB1cmwoJy9zcmMvZm9udHMvcG9wcGlucy1yZWd1bGFyLXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgdXJsKCcvc3JjL2ZvbnRzL3BvcHBpbnMtcmVndWxhci13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICBmb250LWRpc3BsYXk6IHN3YXA7XHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdwb3BwaW5zc2VtaWJvbGQnO1xyXG4gICAgc3JjOiB1cmwoJy9zcmMvZm9udHMvcG9wcGlucy1zZW1pYm9sZC13ZWJmb250LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgICAgIHVybCgnL3NyYy9mb250cy9wb3BwaW5zLXNlbWlib2xkLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgIGZvbnQtZGlzcGxheTogc3dhcDtcclxufSIsIkB1c2UgXCIuLi91dGlsaXRpZXMvYWxsLnNjc3NcIiBhcyAqO1xyXG5cclxuLmZvb3RlciB7XHJcbiAgICBhIHtcclxuICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG5cclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGgzIHtcclxuICAgICAgICBjb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICAgIH1cclxuXHJcbiAgICAmX19pbmZvIHtcclxuICAgICAgICBwYWRkaW5nOiAyNXB4IDA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGZvb3Rlci1pbmZvLWJnYztcclxuICAgIH1cclxuXHJcbiAgICAmX19ib3gge1xyXG4gICAgICAgIEBpbmNsdWRlIGRpc3BsYXktanVzdGlmeS1hbGlnbi1mbGV4KGZsZXgsIHNwYWNlLWJldHdlZW4sIGNlbnRlciwgcm93KTtcclxuXHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6OTkxcHgpIHtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgZ2FwOiAyMHB4IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX21lbnUge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIH1cclxuXHJcbiAgICAmX19sb2dvcyB7XHJcbiAgICAgICAgQGluY2x1ZGUgZGlzcGxheS1qdXN0aWZ5LWFsaWduLWZsZXgoZmxleCwgY2VudGVyLCBjZW50ZXIsIGNvbHVtbik7XHJcblxyXG4gICAgICAgICYtLWdvb2dsZSB7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybS1zY2FsZSgwLjYpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi0tdW5pdGVkIHtcclxuICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtLXNjYWxlKDAuNzUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19jb250YWN0IHtcclxuICAgICAgICBAaW5jbHVkZSBkaXNwbGF5LWp1c3RpZnktYWxpZ24tZmxleChmbGV4LCBmbGV4LWVuZCwgZmxleC1lbmQsIGNvbHVtbik7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogZW5kO1xyXG4gICAgICAgIGdhcDogNXB4O1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAuM3M7XHJcblxyXG4gICAgICAgICYtLWljb25zIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzNnB4O1xyXG5cclxuICAgICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJHByaW1hcnktY29sb3I7XHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0tc2NhbGUoMS4yKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6OTkxcHgpIHtcclxuICAgICAgICAgICAgQGluY2x1ZGUganVzdGlmeS1hbGlnbjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fYXV0aG9yIHtcclxuICAgICAgICBwYWRkaW5nOiAxNXB4IDA7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGZvb3Rlci1hdXRob3ItYmdjO1xyXG5cclxuICAgICAgICAmLS1hdXRob3Ige1xyXG4gICAgICAgICAgICBAaW5jbHVkZSBkaXNwbGF5LWp1c3RpZnktYWxpZ24oZmxleCwgY2VudGVyLCBjZW50ZXIpO1xyXG5cclxuICAgICAgICAgICAgc3BhbiB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcblxyXG4gICAgICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6OTkxcHgpIHtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgW2RhdGEtYXV0aG9yPSdhdXRob3InXSB7XHJcbiAgICAgICAgICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6NDUwcHgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiQHVzZSBcIi4uL3V0aWxpdGllcy9hbGwuc2Nzc1wiIGFzICo7XHJcblxyXG4uc2l6ZS1pbWcge1xyXG4gICAgaGVpZ2h0OiA1NzBweDtcclxufVxyXG5cclxuLmdhbGxlcnkge1xyXG4gICAgJl9fYm94IHtcclxuICAgICAgICBAaW5jbHVkZSBkaXNwbGF5LWp1c3RpZnktYWxpZ24oZmxleCwgY2VudGVyLCBjZW50ZXIpO1xyXG5cclxuICAgICAgICAucGFyZW50IHtcclxuICAgICAgICAgICAgQGluY2x1ZGUgZ3JpZC1nYWxsZXJ5KDMsIDcpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmRpdjEge1xyXG4gICAgICAgICAgICBncmlkLWFyZWE6IDEgLyAxIC8gMyAvIDI7XHJcblxyXG4gICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgQGV4dGVuZCAuc2l6ZS1pbWc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5kaXYyIHtcclxuICAgICAgICAgICAgZ3JpZC1hcmVhOiAzIC8gMyAvIDUgLyA0O1xyXG5cclxuICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIEBleHRlbmQgLnNpemUtaW1nO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuZGl2MyB7XHJcbiAgICAgICAgICAgIGdyaWQtYXJlYTogNSAvIDEgLyA3IC8gMjtcclxuXHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICBAZXh0ZW5kIC5zaXplLWltZztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmRpdjQge1xyXG4gICAgICAgICAgICBncmlkLWFyZWE6IDEgLyAyIC8gMiAvIDM7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuZGl2NSB7XHJcbiAgICAgICAgICAgIGdyaWQtYXJlYTogMSAvIDMgLyAyIC8gNDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5kaXY2IHtcclxuICAgICAgICAgICAgZ3JpZC1hcmVhOiAyIC8gMiAvIDMgLyAzO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmRpdjcge1xyXG4gICAgICAgICAgICBncmlkLWFyZWE6IDIgLyAzIC8gMyAvIDQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuZGl2OCB7XHJcbiAgICAgICAgICAgIGdyaWQtYXJlYTogMyAvIDEgLyA0IC8gMjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5kaXY5IHtcclxuICAgICAgICAgICAgZ3JpZC1hcmVhOiAzIC8gMiAvIDQgLyAzO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmRpdjEwIHtcclxuICAgICAgICAgICAgZ3JpZC1hcmVhOiA0IC8gMSAvIDUgLyAyO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmRpdjExIHtcclxuICAgICAgICAgICAgZ3JpZC1hcmVhOiA0IC8gMiAvIDUgLyAzO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmRpdjEyIHtcclxuICAgICAgICAgICAgZ3JpZC1hcmVhOiA1IC8gMiAvIDYgLyAzO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmRpdjEzIHtcclxuICAgICAgICAgICAgZ3JpZC1hcmVhOiA1IC8gMyAvIDYgLyA0O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmRpdjE0IHtcclxuICAgICAgICAgICAgZ3JpZC1hcmVhOiA2IC8gMiAvIDcgLyAzO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmRpdjE1IHtcclxuICAgICAgICAgICAgZ3JpZC1hcmVhOiA2IC8gMyAvIDcgLyA0O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmRpdjE2IHtcclxuICAgICAgICAgICAgZ3JpZC1hcmVhOiA3IC8gMSAvIDggLyAyO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmRpdjE3IHtcclxuICAgICAgICAgICAgZ3JpZC1hcmVhOiA3IC8gMiAvIDggLyAzO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmRpdjE4IHtcclxuICAgICAgICAgICAgZ3JpZC1hcmVhOiA3IC8gMyAvIDggLyA0O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgQGluY2x1ZGUgd2lkdGgtaGVpZ2h0KDEwMCUsIDI4MHB4KTtcclxuICAgICAgICAgICAgQGluY2x1ZGUgYm9yZGVyLW92ZXJmbG93O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgQG1lZGlhKG1heC13aWR0aDo5OTFweCkge1xyXG4gICAgICAgICAgICAucGFyZW50IHtcclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGdyaWQtZ2FsbGVyeSgyLCAxMCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC5kaXYxIHtcclxuICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogMSAvIDEgLyAzIC8gMjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLmRpdjIge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiA1IC8gMiAvIDcgLyAzO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuZGl2MyB7XHJcbiAgICAgICAgICAgICAgICBncmlkLWFyZWE6IDkgLyAxIC8gMTEgLyAyO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuZGl2NCB7XHJcbiAgICAgICAgICAgICAgICBncmlkLWFyZWE6IDEgLyAyIC8gMiAvIDM7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC5kaXY1IHtcclxuICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogMiAvIDIgLyAzIC8gMztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLmRpdjYge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiAzIC8gMiAvIDQgLyAzO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuZGl2NyB7XHJcbiAgICAgICAgICAgICAgICBncmlkLWFyZWE6IDQgLyAyIC8gNSAvIDM7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC5kaXY4IHtcclxuICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogMyAvIDEgLyA0IC8gMjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLmRpdjkge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiA0IC8gMSAvIDUgLyAyO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuZGl2MTAge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiA1IC8gMSAvIDYgLyAyO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuZGl2MTEge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiA2IC8gMSAvIDcgLyAyO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuZGl2MTIge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiA3IC8gMSAvIDggLyAyO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuZGl2MTMge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiA4IC8gMSAvIDkgLyAyO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuZGl2MTQge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiA3IC8gMiAvIDggLyAzO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuZGl2MTUge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiA4IC8gMiAvIDkgLyAzO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuZGl2MTYge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiA5IC8gMiAvIDEwIC8gMztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLmRpdjE3IHtcclxuICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogMTAgLyAyIC8gMTEgLyAzO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuZGl2MTgge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGJvcmRlci1vdmVyZmxvdztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgQG1lZGlhKG1heC13aWR0aDo2MDBweCkge1xyXG4gICAgICAgICAgICAucGFyZW50IHtcclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGRpc3BsYXktanVzdGlmeS1hbGlnbi1mbGV4KGZsZXgsIGNlbnRlciwgY2VudGVyLCBjb2x1bW4pO1xyXG5cclxuICAgICAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgd2lkdGgtaGVpZ2h0KDMwMHB4LCAzMDBweCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAzcHggc29saWQgJHByaW1hcnktY29sb3I7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJAdXNlIFwiLi4vdXRpbGl0aWVzL2FsbC5zY3NzXCIgYXMgKjtcclxuXHJcbi5kaWFncmFtIHtcclxuICAgICZfX2JveCB7XHJcbiAgICAgICAgQGluY2x1ZGUgZGlzcGxheS1qdXN0aWZ5LWZsZXgoZmxleCwgc3BhY2UtYmV0d2VlbiwgY29sdW1uKTtcclxuICAgIH1cclxuXHJcbiAgICAmX19ib3hlcyB7XHJcbiAgICAgICAgQGluY2x1ZGUgZGlzcGxheS1qdXN0aWZ5LWZsZXgoZmxleCwgY2VudGVyLCBjb2x1bW4pO1xyXG5cclxuICAgICAgICBAbWVkaWEobWF4LXdpZHRoOjk5MXB4KSB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2xvZ28ge1xyXG4gICAgICAgIEBpbmNsdWRlIGRpc3BsYXktanVzdGlmeS1hbGlnbihmbGV4LCBjZW50ZXIsIGNlbnRlcik7XHJcbiAgICAgICAgbWFyZ2luOiAxMHB4IDA7XHJcblxyXG4gICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAzMDBweDtcclxuXHJcbiAgICAgICAgICAgIEBtZWRpYShtYXgtd2lkdGg6OTkxcHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX190YWJsZSB7XHJcbiAgICAgICAgQGluY2x1ZGUgZGlzcGxheS1qdXN0aWZ5LWFsaWduLWZsZXgoZmxleCwgY2VudGVyLCBzdHJldGNoLCBjb2x1bW4pO1xyXG5cclxuICAgICAgICAmLS10YWJsZSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBnYXA6IDIwcHg7XHJcblxyXG4gICAgICAgICAgICB0YWJsZSxcclxuICAgICAgICAgICAgdGgsXHJcbiAgICAgICAgICAgIHRkIHtcclxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggNXB4O1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICRzZW1pYm9sZC1mb250O1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAycHggc29saWQgJHByaW1hcnktY29sb3I7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRhYmxlIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgZ2FwOiAyMHB4IDBweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdGgge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDI1JTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICRwcmltYXJ5LWNvbG9yO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG5cclxuICAgICAgICAgICAgICAgIEBtZWRpYShtYXgtd2lkdGg6OTkxcHgpIHtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRkIHtcclxuICAgICAgICAgICAgICAgIHNwYW4ge1xyXG4gICAgICAgICAgICAgICAgICAgIEBtZWRpYShtYXgtd2lkdGg6OTkxcHgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBAbWVkaWEobWF4LXdpZHRoOjk5MXB4KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLS1raWRzIHtcclxuICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6NDU2cHgpIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLS1hZHVsdHMge1xyXG4gICAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDo1NDJweCkge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fdGl0bGUge1xyXG4gICAgICAgIEBpbmNsdWRlIGRpc3BsYXktanVzdGlmeS1hbGlnbi1mbGV4KGZsZXgsIGNlbnRlciwgY2VudGVyLCBjb2x1bW4pO1xyXG4gICAgICAgIG1hcmdpbjogMjBweCAwcHg7XHJcbiAgICB9XHJcbn0iLCJAdXNlIFwiLi4vdXRpbGl0aWVzL2FsbC5zY3NzXCIgYXMgKjtcclxuXHJcbi5yZWNvcmQge1xyXG4gICAgJl9fc2VjdGlvbiB7XHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBnYXA6IDMwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJl9faW1nIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oYWxsLCAuM3MpO1xyXG4gICAgICAgIHBhZGRpbmc6IDIwcHg7XHJcblxyXG4gICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHdpZHRoLWhlaWdodCgxMDAlLCAzNjlweCk7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGJvcmRlci1yYWRpdXMtb3ZlcmZsb3c7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oYWxsLCAuM3MpO1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6OTkxcHgpIHtcclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHdpZHRoLWhlaWdodCgxMDAlLCAzMDBweCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIFtkYXRhLWltZz1cInNhbXBsZVwiXSB7XHJcbiAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtLXNjYWxlLXJvdGF0ZSgxLjA1LCAtNWRlZyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIFtkYXRhLWltZz1cInJldmVyc2VcIl0ge1xyXG4gICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybS1zY2FsZS1yb3RhdGUoMS4wNSwgNWRlZyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOjk5MXB4KSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2JveCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG5cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDo5OTFweCkge1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19yZXZlcnNlIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcclxuXHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6OTkxcHgpIHtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fdGV4dCB7XHJcbiAgICAgICAgQGluY2x1ZGUgZGlzcGxheS1qdXN0aWZ5LWZsZXgoZmxleCwgc3BhY2UtYmV0d2VlbiwgY29sdW1uKTtcclxuICAgICAgICBwYWRkaW5nOiAyMHB4O1xyXG5cclxuICAgICAgICAmLS1ib3hlcyB7XHJcbiAgICAgICAgICAgIGdhcDogMjBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOjk5MXB4KSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiQHVzZSBcIi4uL3V0aWxpdGllcy9hbGwuc2Nzc1wiIGFzICo7XHJcblxyXG4uY29udGFjdCB7XHJcbiAgICAmX19ib3gge1xyXG4gICAgICAgIEBpbmNsdWRlIGRpc3BsYXktanVzdGlmeS1hbGlnbi1mbGV4KGZsZXgsIGNlbnRlciwgY2VudGVyLCByb3cpO1xyXG5cclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDo5OTFweCkge1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICBnYXA6IDM1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2RhdGEge1xyXG4gICAgICAgIEBpbmNsdWRlIGRpc3BsYXktanVzdGlmeS1mbGV4KGZsZXgsIGNlbnRlciwgY29sdW1uKTtcclxuICAgICAgICBnYXA6IDM1cHg7XHJcblxyXG4gICAgICAgIGEge1xyXG4gICAgICAgICAgICBjb2xvcjogJHRleHQtY29sb3I7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuYnV0dG9uIHtcclxuICAgICAgICAgICAgQGluY2x1ZGUgZGlzcGxheS1qdXN0aWZ5LWFsaWduKGZsZXgsIGZsZXgtc3RhcnQsIGNlbnRlcik7XHJcbiAgICAgICAgICAgIGdhcDogMjBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOjk5MXB4KSB7XHJcbiAgICAgICAgICAgIGdhcDogMjVweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fYm94ZXMge1xyXG4gICAgICAgIEBpbmNsdWRlIGRpc3BsYXktanVzdGlmeS1mbGV4KGZsZXgsIGZsZXgtc3RhcnQsIGNvbHVtbik7XHJcblxyXG4gICAgICAgIHNwYW4ge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAzcHggMDtcclxuXHJcbiAgICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cclxuICAgICAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmOmFmdGVyIHtcclxuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBjb250ZW50LXBvc2l0aW9uO1xyXG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogLTVweDtcclxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIHdpZHRoLWhlaWdodCgxMDAlLCAzcHgpO1xyXG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybS1zY2FsZS1YKDApO1xyXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0O1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuNXM7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJjpob3ZlcjphZnRlciB7XHJcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtLXNjYWxlLVgoMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19tYXAge1xyXG4gICAgICAgIEBpbmNsdWRlIGRpc3BsYXktanVzdGlmeS1mbGV4KGZsZXgsIGNlbnRlciwgY2VudGVyKTtcclxuICAgICAgICBoZWlnaHQ6IDI5NHB4O1xyXG4gICAgICAgIEBpbmNsdWRlIGJvcmRlci1yYWRpdXMtb3ZlcmZsb3c7XHJcbiAgICB9XHJcbn0iLCJAdXNlIFwiLi4vdXRpbGl0aWVzL2FsbC5zY3NzXCIgYXMgKjtcclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MXB4KSB7XHJcbiAgICAuZ2FsbGVyeSxcclxuICAgIC5kaWFncmFtLFxyXG4gICAgLnJlY29yZCxcclxuICAgIC5jb250YWN0IHtcclxuICAgICAgICAuaGVhZGluZyB7XHJcbiAgICAgICAgICAgIGhlaWdodDogMjI1cHg7XHJcblxyXG4gICAgICAgICAgICBoMiB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDM4cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJAdXNlIFwiLi9taXhpblwiIGFzICo7XHJcblxyXG4uc2VjdGlvbi1iZ2Mge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY3Rpb24tYmdjO1xyXG59XHJcblxyXG4uei1pbmRleCB7XHJcbiAgICB6LWluZGV4OiAxO1xyXG59XHJcblxyXG4uYmdjIHtcclxuICAgIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZTtcclxuICAgIGJhY2tncm91bmQ6ICRuYXYtbW9iaWxlLWJnYy1ZICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5zaG93IHtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOjk5MXB4KSB7XHJcbiAgICAgICAgb3BhY2l0eTogMSAhaW1wb3J0YW50O1xyXG4gICAgICAgIHZpc2liaWxpdHk6IHZpc2libGUgIWltcG9ydGFudDtcclxuICAgIH1cclxufVxyXG5cclxuLnNlY3Rpb24tYm94IHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogLTUwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDQwcHggNjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgICBjb2xvcjogKCR0ZXh0LWNvbG9yKTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcclxuICAgIEBpbmNsdWRlIGJveC1zaGFkb3coNXB4LCA1cHgsIDVweCwgJHNoYWRvdy1zZWN0aW9uLWJnYyk7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6OTkxcHgpIHtcclxuICAgICAgICBwYWRkaW5nOiAxNnB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4uaGVhZGluZyB7XHJcbiAgICBAaW5jbHVkZSBkaXNwbGF5LWp1c3RpZnktYWxpZ24oZmxleCwgY2VudGVyLCBjZW50ZXIpO1xyXG4gICAgQGluY2x1ZGUgd2lkdGgtaGVpZ2h0KDEwMCUsIDMwMHB4KTtcclxuICAgIG1hcmdpbi10b3A6IDEwNnB4O1xyXG4gICAgYmFja2dyb3VuZDogJGhlYWRpbmctYmdjO1xyXG59XHJcblxyXG4ud3JhcHBlciB7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWF4LXdpZHRoOiAxNDAwcHg7XHJcbiAgICBwYWRkaW5nOiAwIDIwcHg7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6OTkxcHgpIHtcclxuICAgICAgICBwYWRkaW5nOiAwIDEwcHg7XHJcbiAgICB9XHJcbn0iLCJAdXNlIFwiLi4vdXRpbGl0aWVzL2FsbC5zY3NzXCIgYXMgKjtcclxuXHJcbi5lcnJvciB7XHJcbiAgICBAaW5jbHVkZSBkaXNwbGF5LWp1c3RpZnktYWxpZ24tZmxleChmbGV4LCBjZW50ZXIsIGNlbnRlciwgY29sdW1uKTtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcblxyXG4gICAgcCB7XHJcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcclxuICAgICAgICBmb250LXNpemU6IDQwcHg7XHJcblxyXG4gICAgICAgIEBtZWRpYShtYXgtd2lkdGg6NTAwcHgpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIkB1c2UgXCIuL2NvbXBvbmVudHMvYWxsXCIgYXMgKjtcclxuQHVzZSBcIi4vdXRpbGl0aWVzL2FsbFwiIGFzICo7XHJcblxyXG4qLFxyXG4qOjphZnRlcixcclxuKjo6YmVmb3JlIHtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG5odG1sLFxyXG5ib2R5IHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGZvbnQtZmFtaWx5OiAnUG9wcGlucycsIHNhbnMtc2VyaWY7XHJcbiAgICBjb2xvcjogJHRleHQtY29sb3I7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZm9vdGVyLWluZm8tYmdjO1xyXG59XHJcblxyXG5odG1sIHtcclxuICAgIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xyXG5cclxuICAgIHVzZXItc2VsZWN0OiBub25lO1xyXG4gICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcclxufVxyXG5cclxuYSB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIC4zcztcclxufVxyXG5cclxuaW1nIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG5pbnB1dCxcclxuYnV0dG9uLFxyXG50ZXh0YXJlYSxcclxuc2VsZWN0IHtcclxuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG50ZXh0YXJlYSB7XHJcbiAgICByZXNpemU6IHZlcnRpY2FsO1xyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgYm9yZGVyLXNwYWNpbmc6IDA7XHJcbn1cclxuXHJcbnVsIGxpIHtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgIEBtZWRpYShtYXgtd2lkdGg6OTkxcHgpIHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcbn1cclxuXHJcbm9sLFxyXG51bCB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDAgIWltcG9ydGFudDtcclxufVxyXG5cclxubGkge1xyXG4gICAgdHJhbnNpdGlvbjogLjNzO1xyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIGNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcclxuICAgIH1cclxufVxyXG5cclxuZGwsXHJcbm9sLFxyXG51bCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwcmVtICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi8vIEhFQURJTkcgOlxyXG5cclxuc3BhbiB7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6OTkxcHgpIHtcclxuICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbmgxIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIEBpbmNsdWRlIGZvbnQtd2VpZ2h0KDkwcHgpO1xyXG4gICAgY29sb3I6ICR3aGl0ZTtcclxuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XHJcbiAgICBAaW5jbHVkZSB0ZXh0LXNoYWRvdygycHgsIDJweCwgNXB4LCBibGFjayk7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6OTkxcHgpIHtcclxuICAgICAgICBmb250LXNpemU6IDcwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6NTAwcHgpIHtcclxuICAgICAgICBmb250LXNpemU6IDUwcHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbmgyIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDU1cHg7XHJcbiAgICBAaW5jbHVkZSBmb250LXdlaWdodCg1MHB4KTtcclxuICAgIGNvbG9yOiAkd2hpdGU7XHJcbiAgICBAaW5jbHVkZSB0ZXh0LXNoYWRvdygycHgsIDJweCwgNXB4LCBibGFjayk7XHJcbn1cclxuXHJcbmgzIHtcclxuICAgIEBpbmNsdWRlIGZvbnQtd2VpZ2h0KDM2cHgpO1xyXG4gICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOjk5MXB4KSB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgIH1cclxufVxyXG5cclxuaDQge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIGNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICAgIHBhZGRpbmc6IDE1cHggMzBweDtcclxuICAgIEBpbmNsdWRlIGZvbnQtd2VpZ2h0KDE4cHgpO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGNvbG9yOiAkd2hpdGU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCAkcHJpbWFyeS1jb2xvcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbiAoYWxsLCAuM3MpO1xyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIGNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XHJcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtLXNjYWxlKDEuMSk7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5MXB4KSB7XHJcbiAgICAgICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIH1cclxufVxyXG5cclxuLnJldmVyc2Uge1xyXG4gICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcblxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcclxuICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0tc2NhbGUoMS4xKTtcclxuICAgIH1cclxufSJdfQ== */
